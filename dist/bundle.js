/*
Lime version 0.2.2
Mathematics computation engine
2021 Lime Project Team, MIT license
https://github.com/onenylxus/lime
*/

!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).Lime=e()}(this,function(){"use strict";var s={github:"Please create a GitHub issue about how you received this message, thank you. ","error:emptyArgumentInFinalize":"Empty argument in finalize function.","error:functionAgreement":"Function does not agree with parameter types.","error:invalidArgumentLength":"Invalid argument length.","error:invalidArgumentLogic":"Invalid argument logic.","error:invalidMatrixDimensions":"Invalid matrix dimensions.","error:invalidParametersInCommand":"Invalid parameters in command.","error:inputEmptyInDirect":"Direct input is empty.","error:inputEmptyInPrompt":"Prompt input is empty.","error:inputNotArrayInDirect":"Direct input is not an array.","error:inputNotStringInPrompt":"Prompt input is not a string.","error:invalidConfigProperty":"Invalid configuration property in config command","error:invalidListProperty":"Invalid list property in list command","error:invalidSymbol":"Invalid symbol in prompt input.","error:undefinedVariable":"Variable is undefined but used.","error:unmatchedBrackets":"Some brackets are unmatched.","issue:invalidExpressionInConstruct":"Invalid expression in constructor.","issue:invalidFunctionOrder":"Invalid function order.","issue:invalidMessage":"Invalid message detected.","issue:invalidModuleInBuild":"Invalid module in build function.","issue:invalidModuleInIdentify":"Invalid module in identify function.","issue:invalidResultLengthInProcess":"Invalid result length in process function.","issue:invalidTokenInParse":"Invalid token in parse function.","warn:negativeFactorial":"Factorial function has negative integer input. Currenly gamma function has not been implemented.","warn:strictBoolean":"Strict boolean configuration is set to true. Boolean to expression conversion is not allowed.","warn:zeroExponentOfZero":"Zero raised to exponent of zero is undefined."},i={about:["about"],clear:["clear"],config:["config"],help:["help"],list:["list"],false:["boolean",!1],i:["complex",["integer",0],["integer",1]],true:["boolean",!0],"()":["argument",null],abs:["absolute","r"],ceil:["ceiling","r"],conj:["conjugate","r"],fibonacci:["fibonacci","r"],floor:["floor","r"],gcd:["greatestCommonDivisor","r"],im:["imaginary","r"],lcm:["leastCommonMultiple","r"],max:["maximum","r"],mean:["mean","r"],min:["minimum","r"],ncr:["combination","r"],npr:["permutation","r"],prime:["prime","r"],prod:["product","r"],rand:["random","r"],range:["range","r"],re:["real","r"],reciprocal:["reciprocal","r"],round:["round","r"],sgn:["sign","r"],sum:["sum","r"],trunc:["truncation","r"],"+":["add","b"],"=":["assign","b"],"&":["bitwiseAnd","b"],"~":["bitwiseNot","r"],"|":["bitwiseOr","b"],",":["columnSplit","x"],"(":["commonBracket","n"],")":["commonBracket","x"],".":["decimal","b"],"/":["divide","b"],"==":["equal","b"],"^":["exponent","b"],"!":["factorial","l"],">":["greater","b"],">=":["greaterEqual","b"],"&&":["logicalAnd","b"],"_!":["logicalNot","r"],"||":["logicalOr","b"],"[":["matrixBracket","n"],"]":["matrixBracket","x"],"%":["modulo","b"],"*":["multiply","b"],"_-":["negative","r"],"!=":["notEqual","b"],"_+":["positive","r"],";":["rowSplit","x"],"<<":["shiftLeft","b"],">>":["shiftRight","b"],"<":["smaller","b"],"<=":["smallerEqual","b"],"-":["subtract","b"]};var e={developmentMode:!1,promptShowRuntime:!1,promptShowSteps:!1,strictBoolean:!0,tabSize:2,testMode:!1},t={name:"@onenylxus/lime",version:"0.2.2",description:"Mathematics computation engine",author:"Lime Project Team",license:"MIT",keywords:["javascript","mathematics"],main:"dist/bundle.js",module:"dist/bundle-cjs.js",browser:"dist/bundle-esm.js",sideEffects:!1,dependencies:{},devDependencies:{"@rollup/plugin-commonjs":"^18.1.0","@rollup/plugin-json":"^4.1.0","@rollup/plugin-node-resolve":"^13.0.0",codecov:"^3.8.2",eslint:"^7.25.0","eslint-config-airbnb-base":"^14.2.1","eslint-plugin-import":"^2.22.1",husky:"^6.0.0",jest:"^26.6.3","lint-staged":"^10.5.4","prettier-eslint":"^12.0.0","prettier-eslint-cli":"^5.0.1",rimraf:"^3.0.2",rollup:"^2.47.0","rollup-plugin-node-polyfills":"^0.2.1","rollup-plugin-uglify":"^5.0.2"},scripts:{lint:"prettier-eslint '**/*.js'",clean:"rimraf dist/*.js",debug:"node examples/prompt.js -q",prebuild:"yarn lint && yarn clean",build:"rollup -c",watch:"jest --config jest.config.json --watch",pretest:"yarn build",test:"jest --config jest.config.json --verbose"},husky:{hooks:{"pre-commit":"yarn test"}},repository:{type:"git",url:"git+https://github.com/onenylxus/lime.git"},bugs:{url:"https://github.com/onenylxus/lime/issues"},homepage:"https://github.com/onenylxus/lime#readme"};var r=function(){return`Lime version ${t.version}\n${t.description}\n2021 ${t.author}, ${t.license} license\n${t.homepage.slice(0,-7)}`},a=class{constructor(t,{...e}){this.lime=t,this.name=e.hasOwnProperty("name")?e.name:this.constructor.name.slice(11),this.description=e.hasOwnProperty("description")?e.description:"",this.operations=new Map}execute(t){var e=t.split(/\s/).slice(1),t=e.length;if(!this.operations.has(t))throw new Error("error:invalidParametersInCommand");return this.operations.get(t)(...e)}};class l extends a{constructor(t){super(t,{name:"about",description:"show information about the engine"}),this.operations.set(0,()=>r())}}class n extends a{constructor(t){super(t,{name:"clear",description:"clear variables and memory"}),this.operations.set(0,()=>(this.lime.variables=new Map,this.lime.memory=[],this.lime.store={},"Cleared"))}}class o extends a{constructor(t){super(t,{name:"config",description:"view and modify engine configurations"}),this.operations.set(1,t=>{if(!this.lime.config.hasOwnProperty(t))throw new Error("error:invalidConfigProperty");return`${t}: ${this.lime.config[t]}`}),this.operations.set(2,(t,e)=>{if(!this.lime.config.hasOwnProperty(t))throw new Error("error:invalidConfigProperty");var r=this.lime.config[t];return this.lime.config[t]=this.lime.direct([e]).value,`${t}: ${r} > ${this.lime.config[t]}`})}}class c extends a{constructor(t){super(t,{name:"help",description:"list all available commands"}),this.operations.set(0,()=>{const r=["Below is a list of available commands:"];return this.lime.module.forEach(t=>{try{var e=new t(this.lime);e instanceof a&&r.push(`${e.name}: ${e.description}`)}catch(t){}}),r.join("\n")})}}var h=class{static isUndefined(...t){return t.every(t=>void 0===t)}static isNull(...t){return t.every(t=>null===t)}static isTrue(...t){return t.every(t=>!0===t)}static isFalse(...t){return t.every(t=>!1===t)}static isBoolean(...t){return t.every(t=>"boolean"==typeof t)}static isNumber(...t){return t.every(t=>"number"==typeof t)}static isString(...t){return t.every(t=>"string"==typeof t)}static isFunction(...t){return t.every(t=>"function"==typeof t)}static isArray(...t){return t.every(t=>t instanceof Array)}static isObject(...t){return t.every(t=>t instanceof Object)}static isClass(e,...t){return t.every(t=>t instanceof e)}};class m extends a{constructor(t){super(t,{name:"list",description:"list specified engine property"}),this.operations.set(1,t=>{if(!this.lime.hasOwnProperty(t)||h.isFunction(this.lime[t]))throw new Error("error:invalidListProperty");return h.isClass(Map,this.lime[t])?Object.fromEntries(this.lime[t]):this.lime[t]})}}var p=class{constructor(t,{...e}){this.lime=t,this.name=e.hasOwnProperty("name")?e.name:this.constructor.name.slice(12),this.isSimple=!e.hasOwnProperty("isSimple")||!h.isBoolean(e.isSimple)||e.isSimple}};class u extends p{constructor(t,...e){if(super(t,{name:"argument",isSimple:!1}),!this.lime.identify("expression")(...e)&&!h.isNull(e[0]))throw new Error("issue:invalidExpressionInConstruct");this.places=e}get value(){return this.places.map(t=>t.value)}get length(){return this.isEmpty?0:this.places.length}get isEmpty(){return h.isNull(this.places[0])}simplify(){return this.places.map(t=>t.simplify())}finalize(){if(this.isEmpty)throw new Error("error:emptyArgumentInFinalize");return 1===this.length?this.places[0].finalize():this.places.map(t=>t.finalize())}}class g extends p{constructor(t,e){super(t,{name:"boolean",isSimple:!0}),this.raw=e}get value(){return!!this.raw}toInteger(){if(this.lime.config.strictBoolean)throw new Error("warn:strictBoolean");return this.lime.direct([+this.value])}simplify(){return this.lime.build("boolean")(this.value)}finalize(){return this.simplify()}print(){return this.value?"true":"false"}}class d extends p{constructor(t,e,r){if(super(t,{name:"complex",isSimple:!0}),!this.lime.identify("integer","rational")(e,r))throw new Error("issue:invalidExpressionInConstruct");this.rPlace=e,this.iPlace=r}get value(){return{r:this.rPlace.value,i:this.iPlace.value}}toBoolean(){return this.lime.build("boolean")(this.value.r||this.value.i)}simplify(){return this.lime.direct([this.iPlace,"==",0]).value?this.rPlace.simplify():this.lime.build("complex")(this.rPlace.simplify(),this.iPlace.simplify())}finalize(){return this.simplify()}print(){var t=this.lime.direct(["sgn","(",this.iPlace,")"]).value;return`${0===this.value.r?"":`${this.rPlace.print()}${0<t?"+":""}`}${1===this.value.i?"":-1===this.value.i?"-":this.iPlace.print()}i`}}class b extends p{constructor(t,e){if(super(t,{name:"integer",isSimple:!0}),!h.isNumber(+e))throw new Error("issue:invalidExpressionInConstruct");this.string=`${e}`}get value(){return Math.trunc(+this.string)}toBoolean(){return this.lime.build("boolean")(this.value)}toComplex(){return this.lime.build("complex")(this,this.lime.build("integer")(0))}toRational(){return this.lime.build("rational")(this,this.lime.build("integer")(1))}simplify(){return this.lime.build("integer")(this.value)}finalize(){return this.simplify()}print(){return`${this.value}`}}class f extends p{constructor(t,e){if(super(t,{name:"matrix",isSimple:!1}),!this.lime.identify("expression")(...e.flat())&&!h.isNull(e[0][0]))throw new Error("issue:invalidExpressionInConstruct");const r=e[0].length;if(e.some(t=>t.length!==r))throw new Error("error:invalidMatrixDimensions");this.places=e}get value(){return this.places.map(t=>t.map(t=>t.value))}get row(){return this.isEmpty?0:this.places.length}get column(){return this.isEmpty?0:this.places[0].length}get isEmpty(){return h.isNull(this.places[0][0])}simplify(){return this.places=this.places.map(t=>t.map(t=>t.simplify())),this}finalize(){return this.places=this.places.map(t=>t.map(t=>t.finalize())),this}print(){let r="";if(this.lime.config.testMode){r+="[";for(let e=0;e<this.row;e++){r+=0===e?"":";";for(let t=0;t<this.column;t++)r+=(0===t?"":",")+this.places[e][t].print()}r+="]"}else{var i=this.places.map(t=>t.map(t=>t.print().length));const s=[];for(let r=0;r<this.column;r++){let e=0;for(let t=0;t<this.row;t++)e=Math.max(i[t][r],e);s.push(e)}for(let e=0;e<this.row;e++){for(let t=0;t<this.column;t++)r+=new Array(s[t]-i[e][t]+this.lime.config.tabSize+1).join(" ")+this.places[e][t].print();r+=e<this.row-1?"\n":""}}return r}}class v extends p{constructor(t,e,r){if(super(t,{name:"rational",isSimple:!0}),!this.lime.identify("integer")(e,r))throw new Error("issue:invalidExpressionInConstruct");this.nPlace=e,this.dPlace=r}get value(){return{n:this.nPlace.value,d:this.dPlace.value}}toBoolean(){return this.lime.build("boolean")(this.value.n/this.value.d)}toComplex(){return this.lime.build("complex")(this,this.lime.build("integer")(0))}simplify(){var t=this.lime.direct(["gcd","(",this.nPlace,",",this.dPlace,")"]);return this.nPlace=this.lime.direct([this.nPlace,"/",t]),this.dPlace=this.lime.direct([this.dPlace,"/",t]),this.value.d<0&&(this.nPlace=this.lime.direct(["-",this.nPlace]),this.dPlace=this.lime.direct(["-",this.dPlace])),1===this.value.d?this.nPlace.simplify():this.lime.build("rational")(this.nPlace.simplify(),this.dPlace.simplify())}finalize(){return this.simplify()}print(){return`${this.nPlace.print()}/${this.dPlace.print()}`}}class x extends p{constructor(t,e){super(t,{name:"variable",isSimple:!0}),this.key=e}get value(){if(!this.lime.variables.has(this.key))throw new Error("error:undefinedVariable");return this.lime.variables.get(this.key)}simplify(){return this.value.simplify()}finalize(){return this.simplify()}}var w=[["columnSplit","rowSplit"],["assign","equal","greater","greaterEqual","notEqual","smaller","smallerEqual"],["add","bitwiseAnd","bitwiseNot","bitwiseOr","logicalAnd","logicalNot","logicalOr","modulo","shiftLeft","shiftRight","subtract"],["divide","multiply"],["exponent"],["decimal","negative","positive"],["absolute","ceiling","combination","conjugate","factorial","fibonacci","floor","greatestCommonDivisor","imaginary","leastCommonMultiple","maximum","mean","minimum","permutation","prime","product","random","range","real","reciprocal","round","sign","sum","truncation"],["commonBracket","matrixBracket","omitted"]],y={cond:{"b(bool,bool)":t=>t.bpi("boolean"),"b(comp,comp)":t=>t.bpi("complex"),"b(comp,{int|rat})":t=>t.lpi("complex")&&t.rpi("integer","rational"),"b(expr,expr)":t=>t.bpi("expression"),"b(int,int)":t=>t.bpi("integer"),"b(int,rat)":t=>t.lpi("integer")&&t.rpi("rational"),"b(rat,int)":t=>t.lpi("rational")&&t.rpi("integer"),"b(rat,rat)":t=>t.bpi("rational"),"b(var,expr)":t=>t.lpi("variable")&&t.rpi("expression"),"b({int|rat},comp)":t=>t.lpi("integer","rational")&&t.rpi("complex"),"l(arg{expr[1]})":t=>t.lpi("argument")&&1===t.left.length&&t.ci("expression")(t.left.places[0]),"l(bool)":t=>t.lpi("boolean"),"l(int)":t=>t.lpi("integer"),"l(var)":t=>t.lpi("variable"),"l({comp|int|rat})":t=>t.lpi("complex","integer","rational"),"n()":()=>!0,"r(arg{})":t=>t.rpi("argument")&&t.right.isEmpty,"r(arg{comp[1]})":t=>t.rpi("argument")&&1===t.right.length&&t.ci("complex")(...t.right.places),"r(arg{expr[1]})":t=>t.rpi("argument")&&1===t.right.length&&t.ci("expression")(...t.right.places),"r(arg{expr[@]})":t=>t.rpi("argument")&&t.ci("expression")(...t.right.places),"r(arg{int[1]})":t=>t.rpi("argument")&&1===t.right.length&&t.ci("integer")(...t.right.places),"r(arg{int[2]})":t=>t.rpi("argument")&&2===t.right.length&&t.ci("integer")(...t.right.places),"r(arg{rat[1]})":t=>t.rpi("argument")&&1===t.right.length&&t.ci("rational")(...t.right.places),"r(arg{{int|rat}[$]})":e=>e.rpi("argument")&&e.right.places.some(t=>e.ci("integer","rational")(t)),"r(bool)":t=>t.rpi("boolean"),"r(int)":t=>t.rpi("integer"),"r(rat)":t=>t.rpi("rational"),"r(var)":t=>t.rpi("variable"),"r({comp|int|rat})":t=>t.rpi("complex","integer","rational"),"r(+)":t=>t.rpi("add"),"r(=)":t=>t.rpi("assign"),"r(&)":t=>t.rpi("bitwiseAnd"),"r(|)":t=>t.rpi("bitwiseOr"),"r(!)":t=>t.rpi("factorial"),"r(>)":t=>t.rpi("greater"),"r(_-)":t=>t.rpi("negative"),"r(_+)":t=>t.rpi("positive"),"r(<)":t=>t.rpi("smaller"),"r(-)":t=>t.rpi("subtract"),"z()":t=>0===t.pos},act:{"f(==)":t=>{t.rus(t.lime.refer("=="))},"f(!==)":t=>{t.rus(t.lime.refer("!"),t.lime.refer("=="))},"f(>=)":t=>{t.rus(t.lime.refer(">="))},"f(&&)":t=>{t.rus(t.lime.refer("&&"))},"f(_!)":t=>{t.fs(t.lime.refer("_!"))},"f(||)":t=>{t.rus(t.lime.refer("||"))},"f(_-)":t=>{t.fs(t.lime.refer("_-"))},"f(!=)":t=>{t.rus(t.lime.refer("!="))},"f(_+)":t=>{t.fs(t.lime.refer("_+"))},"f(<<)":t=>{t.rus(t.lime.refer("<<"))},"f(>>)":t=>{t.rus(t.lime.refer(">>"))},"f(<=)":t=>{t.rus(t.lime.refer("<="))},"l(arg{expr[1]}->expr)":t=>{t.lps(t.left.finalize())},"l(expr->int)":t=>{t.lps(t.left.toInteger())},"l(expr->rat)":t=>{t.lps(t.left.toRational())},"l(var->expr)":t=>{t.lps(t.left.value)},"l({comp|int|rat}->bool)":t=>{t.lps(t.left.toBoolean())},"l({int|rat}->comp)":t=>{t.lps(t.left.toComplex())},"r(arg{expr[1]}->expr)":t=>{t.rps(t.right.finalize())},"r(arg{{int|rat}[$]}->arg{comp[$]})":e=>{const t=e.right;t.places=t.places.map(t=>e.ci("integer","rational")(t)?t.toComplex():t),e.rps(t)},"r(expr->int)":t=>{t.rps(t.right.toInteger())},"r(expr->rat)":t=>{t.rps(t.right.toRational())},"r(var->expr)":t=>{t.rps(t.right.value)},"r({comp|int|rat}->bool)":t=>{t.rps(t.right.toBoolean())},"r({int|rat}->comp)":t=>{t.rps(t.right.toComplex())},"r(_!)":t=>{t.rps(t.lime.refer("_!"))},"r(_-)":t=>{t.rps(t.lime.refer("_-"))},"r(_+)":t=>{t.rps(t.lime.refer("_+"))}},pair:{"cb(comp,{int|rat}->comp)":["b(comp,{int|rat})","r({int|rat}->comp)"],"cb(int->rat,rat)":["b(int,rat)","l(expr->rat)"],"cb(rat,int->rat)":["b(rat,int)","r(expr->rat)"],"cb({int|rat}->comp,comp)":["b({int|rat},comp)","l({int|rat}->comp)"],"cl(arg{expr[1]}->expr)":["l(arg{expr[1]})","l(arg{expr[1]}->expr)"],"cl(bool->int)":["l(bool)","l(expr->int)"],"cl(var->expr)":["l(var)","l(var->expr)"],"cl({comp|int|rat}->bool)":["l({comp|int|rat})","l({comp|int|rat}->bool)"],"cr(arg{expr[1]}->expr)":["r(arg{expr[1]})","r(arg{expr[1]}->expr)"],"cr(arg{{int|rat}[$]}->arg{comp[$]})":["r(arg{{int|rat}[$]})","r(arg{{int|rat}[$]}->arg{comp[$]})"],"cr(bool->int)":["r(bool)","r(expr->int)"],"cr(var->expr)":["r(var)","r(var->expr)"],"cr({comp|int|rat}->bool)":["r({comp|int|rat})","r({comp|int|rat}->bool)"],"tf(==)":["r(=)","f(==)"],"tf(!==)":["r(=)","f(!==)"],"tf(>=)":["r(=)","f(>=)"],"tf(&&)":["r(&)","f(&&)"],"tf(||)":["r(|)","f(||)"],"tf(!=)":["r(=)","f(!=)"],"tf(<<)":["r(<)","f(<<)"],"tf(>>)":["r(>)","f(>>)"],"tf(<=)":["r(=)","f(<=)"],"tr(_!)":["r(!)","r(_!)"],"tr(_+)":["r(+)","r(_+)"],"tr(_-)":["r(-)","r(_-)"],"tz(_!)":["z()","f(_!)"],"tz(_+)":["z()","f(_+)"],"tz(_-)":["z()","f(_-)"]}};var P=class{constructor(t,{...e}){this.lime=t,this.mode=e.hasOwnProperty("mode")&&["l","r","b","n"].includes(e.mode)?e.mode:"x",this.name=e.hasOwnProperty("name")?e.name:this.constructor.name.slice(12),this.operations={},this.algorithms=new Map}get order(){for(let t=0;t<w.length;t++)if(w[t].includes(this.name))return t;throw new Error("issue:invalidFunctionOrder")}evaluate(i){if("x"===this.mode)throw new Error("error:unmatchedBrackets");const s=this.operations[this.mode];for(let r=0;r<s.length;r++){let t,e;if(h.isString(s[r])&&(t="e"===s[r][0]?y.cond[s[r].substring(1)]:y.cond[y.pair[s[r]][0]],e="e"===s[r][0]?this.algorithms.get(s[r].substring(1)):y.act[y.pair[s[r]][1]]),t(i))return e(i),i}throw new Error("error:functionAgreement")}};class _ extends P{constructor(t,e){super(t,{name:"add",mode:e}),this.operations.b=["tz(_+)","tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","cb({int|rat}->comp,comp)","cb(comp,{int|rat}->comp)","eb(int,int)","eb(rat,rat)","eb(comp,comp)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("integer")(t.left.value+t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.build("rational")(this.lime.direct([t.left.nPlace,"*",t.right.dPlace,"+",t.right.nPlace,"*",t.left.dPlace]),this.lime.direct([t.left.dPlace,"*",t.right.dPlace])))}),this.algorithms.set("b(comp,comp)",t=>{t.bs(this.lime.build("complex")(this.lime.direct([t.left.rPlace,"+",t.right.rPlace]),this.lime.direct([t.left.iPlace,"+",t.right.iPlace])))})}}class E extends P{constructor(t,e){super(t,{name:"decimal",mode:e}),this.operations.b=["eb(int,int)"],this.algorithms.set("b(int,int)",t=>{var e;0<t.right.value?(e=this.lime.direct([10,"^",t.right.string.length]),t.bs(this.lime.direct(["(",t.left,"*",e,"+",t.right,")","/",e]))):t.bs(t.left)})}}class k extends P{constructor(t,e){super(t,{name:"divide",mode:e}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","cb({int|rat}->comp,comp)","cb(comp,{int|rat}->comp)","eb(int,int)","eb(rat,rat)","eb(comp,comp)"],this.algorithms.set("b(int,int)",t=>{t.left.value%t.right.value==0?t.bs(this.lime.build("integer")(t.left.value/t.right.value)):t.bs(this.lime.build("rational")(t.left,t.right))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.build("rational")(this.lime.direct([t.left.nPlace,"*",t.right.dPlace]),this.lime.direct([t.left.dPlace,"*",t.right.nPlace])))}),this.algorithms.set("b(comp,comp)",t=>{t.bs(this.lime.build("complex")(this.lime.direct(["re","(",t.left,"*","conj","(",t.right,")",")","/","(",t.right,"*","conj","(",t.right,")",")"]),this.lime.direct(["im","(",t.left,"*","conj","(",t.right,")",")","/","(",t.right,"*","conj","(",t.right,")",")"])))})}}class I extends P{constructor(t,e){super(t,{name:"exponent",mode:e}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","eb(int,int)","eb(rat,int)"],this.algorithms.set("b(int,int)",t=>{if(0<=t.right.value){if(0===t.left.value&&0===t.right.value)throw new Error("warn:zeroExponentOfZero");t.bs(this.lime.build("integer")(t.left.value**t.right.value))}else t.bs(this.lime.build("rational")(this.lime.direct([1]),this.lime.direct([t.left,"^","-",t.right])))}),this.algorithms.set("b(rat,int)",t=>{0<=t.right.value?t.bs(this.lime.build("rational")(this.lime.direct([t.left.nPlace,"^",t.right]),this.lime.direct([t.left.dPlace,"^",t.right]))):t.bs(this.lime.build("rational")(this.lime.direct([t.left.dPlace,"^","-",t.right]),this.lime.direct([t.left.nPlace,"^","-",t.right])))})}}class S extends P{constructor(t,e){super(t,{name:"modulo",mode:e}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","eb(int,int)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("integer")(t.left.value%t.right.value))})}}class M extends P{constructor(t,e){super(t,{name:"multiply",mode:e}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","cb({int|rat}->comp,comp)","cb(comp,{int|rat}->comp)","eb(int,int)","eb(rat,rat)","eb(comp,comp)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("integer")(t.left.value*t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.build("rational")(this.lime.direct([t.left.nPlace,"*",t.right.nPlace]),this.lime.direct([t.left.dPlace,"*",t.right.dPlace])))}),this.algorithms.set("b(comp,comp)",t=>{t.bs(this.lime.build("complex")(this.lime.direct([t.left.rPlace,"*",t.right.rPlace,"-",t.left.iPlace,"*",t.right.iPlace]),this.lime.direct([t.left.rPlace,"*",t.right.iPlace,"+",t.left.iPlace,"*",t.right.rPlace])))})}}class $ extends P{constructor(t,e){super(t,{name:"negative",mode:e}),this.operations.r=["tr(_!)","tr(_+)","tr(_-)","cr(var->expr)","cr(arg{expr[1]}->expr)","cr(bool->int)","er(int)","er(rat)","er(_+)","er(_-)"],this.algorithms.set("r(int)",t=>{t.rus(this.lime.direct([-1,"*",t.right]))}),this.algorithms.set("r(rat)",t=>{t.rus(this.lime.build("rational")(this.lime.direct(["-",t.right.nPlace]),t.right.dPlace))}),this.algorithms.set("r(_+)",t=>{t.rus(this.lime.refer("_-"))}),this.algorithms.set("r(_-)",t=>{t.rus(this.lime.refer("_+"))})}}class A extends P{constructor(t,e){super(t,{name:"positive",mode:e}),this.operations.r=["tr(_!)","tr(_+)","tr(_-)","cr(var->expr)","cr(arg{expr[1]}->expr)","cr(bool->int)","er(int)","er(rat)","er(_+)","er(_-)"],this.algorithms.set("r(int)",t=>{t.rus(this.lime.direct([1,"*",t.right]))}),this.algorithms.set("r(rat)",t=>{t.rus(this.lime.build("rational")(this.lime.direct([t.right.nPlace]),t.right.dPlace))}),this.algorithms.set("r(_+)",t=>{t.rus(this.lime.refer("_+"))}),this.algorithms.set("r(_-)",t=>{t.rus(this.lime.refer("_-"))})}}class B extends P{constructor(t,e){super(t,{name:"subtract",mode:e}),this.operations.b=["tz(_-)","tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","cb({int|rat}->comp,comp)","cb(comp,{int|rat}->comp)","eb(int,int)","eb(rat,rat)","eb(comp,comp)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("integer")(t.left.value-t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.build("rational")(this.lime.direct([t.left.nPlace,"*",t.right.dPlace,"-",t.right.nPlace,"*",t.left.dPlace]),this.lime.direct([t.left.dPlace,"*",t.right.dPlace])))}),this.algorithms.set("b(comp,comp)",t=>{t.bs(this.lime.build("complex")(this.lime.direct([t.left.rPlace,"-",t.right.rPlace]),this.lime.direct([t.left.iPlace,"-",t.right.iPlace])))})}}class j extends P{constructor(t,e){super(t,{name:"bitwiseAnd",mode:e}),this.operations.b=["tf(&&)","tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","eb(int,int)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.direct([t.left.value&t.right.value]))})}}class z extends P{constructor(t,e){super(t,{name:"bitwiseNot",mode:e}),this.operations.r=["tr(_!)","tr(_+)","tr(_-)","cr(var->expr)","cr(arg{expr[1]}->expr)","cr(bool->int)","er(int)"],this.algorithms.set("r(int)",t=>{t.rus(this.lime.direct([~t.right.value]))})}}class O extends P{constructor(t,e){super(t,{name:"bitwiseOr",mode:e}),this.operations.b=["tf(||)","tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","eb(int,int)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.direct([t.left.value|t.right.value]))})}}class C extends P{constructor(t,e){super(t,{name:"shiftLeft",mode:e}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","eb(int,int)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.direct([t.left.value<<t.right.value]))})}}class L extends P{constructor(t,e){super(t,{name:"shiftRight",mode:e}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","eb(int,int)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.direct([t.left.value>>t.right.value]))})}}class N extends P{constructor(t,e){super(t,{name:"equal",mode:e}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","eb(int,int)","eb(rat,rat)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("boolean")(t.left.value===t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.direct([t.left.nPlace,"*",t.right.dPlace,"==",t.right.nPlace,"*",t.left.dPlace]))})}}class q extends P{constructor(t,e){super(t,{name:"greater",mode:e}),this.operations.b=["tf(>=)","tf(>>)","tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","eb(int,int)","eb(rat,rat)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("boolean")(t.left.value>t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.direct([t.left.nPlace,"*",t.right.dPlace,">",t.right.nPlace,"*",t.left.dPlace]))})}}class D extends P{constructor(t,e){super(t,{name:"greaterEqual",mode:e}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","eb(int,int)","eb(rat,rat)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("boolean")(t.left.value>=t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.direct([t.left.nPlace,"*",t.right.dPlace,">=",t.right.nPlace,"*",t.left.dPlace]))})}}class F extends P{constructor(t,e){super(t,{name:"notEqual",mode:e}),this.operations.b=["tf(!==)","tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","eb(int,int)","eb(rat,rat)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("boolean")(t.left.value!==t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.direct([t.left.nPlace,"*",t.right.dPlace,"!=",t.right.nPlace,"*",t.left.dPlace]))})}}class R extends P{constructor(t,e){super(t,{name:"smaller",mode:e}),this.operations.b=["tf(<=)","tf(<<)","tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","eb(int,int)","eb(rat,rat)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("boolean")(t.left.value<t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.direct([t.left.nPlace,"*",t.right.dPlace,"<",t.right.nPlace,"*",t.left.dPlace]))})}}class T extends P{constructor(t,e){super(t,{name:"smallerEqual",mode:e}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","eb(int,int)","eb(rat,rat)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("boolean")(t.left.value<=t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.direct([t.left.nPlace,"*",t.right.dPlace,"<=",t.right.nPlace,"*",t.left.dPlace]))})}}class V extends P{constructor(t,e){super(t,{name:"conjugate",mode:e}),this.operations.r=["cr(arg{{int|rat}[$]}->arg{comp[$]})","er(arg{comp[1]})"],this.algorithms.set("r(arg{comp[1]})",t=>{t.rus(this.lime.build("complex")(t.right.places[0].rPlace,this.lime.direct(["-",t.right.places[0].iPlace])))})}}class Z extends P{constructor(t,e){super(t,{name:"imaginary",mode:e}),this.operations.r=["cr(arg{{int|rat}[$]}->arg{comp[$]})","er(arg{comp[1]})"],this.algorithms.set("r(arg{comp[1]})",t=>{t.rus(this.lime.direct([t.right.places[0].iPlace]))})}}class U extends P{constructor(t,e){super(t,{name:"real",mode:e}),this.operations.r=["cr(arg{{int|rat}[$]}->arg{comp[$]})","er(arg{comp[1]})"],this.algorithms.set("r(arg{comp[1]})",t=>{t.rus(this.lime.direct([t.right.places[0].rPlace]))})}}class G extends P{constructor(t,e){super(t,{name:"combination",mode:e}),this.operations.r=["er(arg{int[2]})"],this.algorithms.set("r(arg{int[2]})",t=>{var[e,r]=t.right.places;if(e.value<r.value)throw new Error("error:invalidArgumentLogic");t.rus(this.lime.direct(["npr","(",e,",",r,")","/",r,"!"]))})}}class H extends P{constructor(t,e){super(t,{name:"factorial",mode:e}),this.operations.l=["tz(_!)","tf(!=)","cl(var->expr)","cl(arg{expr[1]}->expr)","cl(bool->int)","el(int)"],this.algorithms.set("l(int)",t=>{if(t.left.value<0)throw new Error("warn:negativeFactorial");0<t.left.value?t.lus(this.lime.direct([t.left,"*","(",t.left,"-",1,")","!"])):t.lus(this.lime.direct([1]))})}}class J extends P{constructor(t,e){super(t,{name:"permutation",mode:e}),this.operations.r=["er(arg{int[2]})"],this.algorithms.set("r(arg{int[2]})",t=>{var[e,r]=t.right.places;if(e.value<r.value)throw new Error("error:invalidArgumentLogic");t.rus(this.lime.direct([e,"!","/","(",e,"-",r,")","!"]))})}}class K extends P{constructor(t,e){super(t,{name:"logicalAnd",mode:e}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl({comp|int|rat}->bool)","cr({comp|int|rat}->bool)","eb(bool,bool)"],this.algorithms.set("b(bool,bool)",t=>{t.bs(this.lime.build("boolean")(t.left.value&&t.right.value))})}}class Q extends P{constructor(t,e){super(t,{name:"logicalNot",mode:e}),this.operations.r=["tr(_!)","tr(_+)","tr(_-)","cr(var->expr)","cr(arg{expr[1]}->expr)","cr({comp|int|rat}->bool)","er(bool)"],this.algorithms.set("r(bool)",t=>{t.rus(this.lime.build("boolean")(!t.right.value))})}}class W extends P{constructor(t,e){super(t,{name:"logicalOr",mode:e}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl({comp|int|rat}->bool)","cr({comp|int|rat}->bool)","eb(bool,bool)"],this.algorithms.set("b(bool,bool)",t=>{t.bs(this.lime.build("boolean")(t.left.value||t.right.value))})}}class X extends P{constructor(t,e){super(t,{name:"absolute",mode:e}),this.operations.r=["er(arg{int[1]})","er(arg{rat[1]})"],this.algorithms.set("r(arg{int[1]})",t=>{t.rus(this.lime.direct([Math.abs(t.right.value[0])]))}),this.algorithms.set("r(arg{rat[1]})",t=>{t.rus(this.lime.direct([Math.abs(t.right.value[0].n),"/",Math.abs(t.right.value[0].d)]))})}}class Y extends P{constructor(t,e){super(t,{name:"ceiling",mode:e}),this.operations.r=["er(arg{int[1]})","er(arg{rat[1]})"],this.algorithms.set("r(arg{int[1]})",t=>{t.rus(this.lime.direct([t.right.value[0]]))}),this.algorithms.set("r(arg{rat[1]})",t=>{t.rus(this.lime.direct([Math.ceil(t.right.value[0].n/t.right.value[0].d)]))})}}class tt extends P{constructor(t,e){super(t,{name:"fibonacci",mode:e}),this.operations.r=["er(arg{int[1]})"],this.algorithms.set("r(arg{int[1]})",t=>{var e=t.right.value[0];if(e<1)throw new Error("error:invalidArgumentLogic");this.lime.store.hasOwnProperty("fibonacci")||(this.lime.store.fibonacci=[1,1]);const r=[...this.lime.store.fibonacci];for(;r.length<e;)r.push(r[r.length-2]+r[r.length-1]);this.lime.store.fibonacci=[...r],t.rus(this.lime.direct([r[e-1]]))})}}class et extends P{constructor(t,e){super(t,{name:"floor",mode:e}),this.operations.r=["er(arg{int[1]})","er(arg{rat[1]})"],this.algorithms.set("r(arg{int[1]})",t=>{t.rus(this.lime.direct([t.right.value[0]]))}),this.algorithms.set("r(arg{rat[1]})",t=>{t.rus(this.lime.direct([Math.floor(t.right.value[0].n/t.right.value[0].d)]))})}}class rt extends P{constructor(t,e){super(t,{name:"greatestCommonDivisor",mode:e}),this.operations.r=["er(arg{int[2]})"],this.algorithms.set("r(arg{int[2]})",t=>{let e=t.right.value[0],r=t.right.value[1];for(;0!==r;){var i=r;r=e%r,e=i}t.rus(this.lime.direct([e]))})}}class it extends P{constructor(t,e){super(t,{name:"leastCommonMultiple",mode:e}),this.operations.r=["er(arg{int[2]})"],this.algorithms.set("r(arg{int[2]})",t=>{var e=t.right.value[0],r=t.right.value[1];t.rus(this.lime.direct([e,"*",r,"/","gcd","(",e,",",r,")"]))})}}class st extends P{constructor(t,e){super(t,{name:"prime",mode:e}),this.operations.r=["er(arg{int[1]})"],this.algorithms.set("r(arg{int[1]})",t=>{var e=t.right.value[0];if(e<1)throw new Error("error:invalidArgumentLogic");this.lime.store.hasOwnProperty("prime")||(this.lime.store.prime=[2]);const r=[...this.lime.store.prime];let i=r[r.length-1]+1;for(;r.length<e;)r.every(t=>i%t!=0)&&r.push(i),i++;this.lime.store.prime=[...r],t.rus(this.lime.direct([r[e-1]]))})}}class at extends P{constructor(t,e){super(t,{name:"reciprocal",mode:e}),this.operations.r=["er(arg{expr[1]})"],this.algorithms.set("r(arg{expr[1]})",t=>{t.rus(this.lime.direct([1,"/",t.right.places[0]]))})}}class lt extends P{constructor(t,e){super(t,{name:"round",mode:e}),this.operations.r=["er(arg{int[1]})","er(arg{rat[1]})"],this.algorithms.set("r(arg{int[1]})",t=>{t.rus(this.lime.direct([t.right.value[0]]))}),this.algorithms.set("r(arg{rat[1]})",t=>{t.rus(this.lime.direct([Math.round(t.right.value[0].n/t.right.value[0].d)]))})}}class nt extends P{constructor(t,e){super(t,{name:"sign",mode:e}),this.operations.r=["er(arg{int[1]})","er(arg{rat[1]})"],this.algorithms.set("r(arg{int[1]})",t=>{t.rus(this.lime.direct([Math.sign(t.right.value[0])]))}),this.algorithms.set("r(arg{rat[1]})",t=>{t.rus(this.lime.direct([Math.sign(t.right.value[0].n/t.right.value[0].d)]))})}}class ot extends P{constructor(t,e){super(t,{name:"truncation",mode:e}),this.operations.r=["er(arg{int[1]})","er(arg{rat[1]})"],this.algorithms.set("r(arg{int[1]})",t=>{t.rus(this.lime.direct([t.right.value[0]]))}),this.algorithms.set("r(arg{rat[1]})",t=>{t.rus(this.lime.direct([Math.trunc(t.right.value[0].n/t.right.value[0].d)]))})}}class ct extends P{constructor(t,e){super(t,{name:"maximum",mode:e}),this.operations.r=["er(arg{expr[@]})"],this.algorithms.set("r(arg{expr[@]})",e=>{if(0===e.right.length)throw new Error("error:invalidArgumentLength");let r=0;for(let t=1;t<e.right.length;t++)r=this.lime.direct([e.right.places[t],">",e.right.places[r]]).value?t:r;e.rus(this.lime.direct([e.right.places[r]]))})}}class ht extends P{constructor(t,e){super(t,{name:"mean",mode:e}),this.operations.r=["er(arg{expr[@]})"],this.algorithms.set("r(arg{expr[@]})",t=>{if(0===t.right.length)throw new Error("error:invalidArgumentLength");t.rus(this.lime.direct(["sum",t.right,"/",t.right.length]))})}}class mt extends P{constructor(t,e){super(t,{name:"minimum",mode:e}),this.operations.r=["er(arg{expr[@]})"],this.algorithms.set("r(arg{expr[@]})",e=>{if(0===e.right.length)throw new Error("error:invalidArgumentLength");let r=0;for(let t=1;t<e.right.length;t++)r=this.lime.direct([e.right.places[t],"<",e.right.places[r]]).value?t:r;e.rus(this.lime.direct([e.right.places[r]]))})}}class pt extends P{constructor(t,e){super(t,{name:"product",mode:e}),this.operations.r=["er(arg{expr[@]})"],this.algorithms.set("r(arg{expr[@]})",e=>{if(0===e.right.length)throw new Error("error:invalidArgumentLength");let r=e.right.places[0];for(let t=1;t<e.right.length;t++)r=this.lime.direct([r,"*",e.right.places[t]]);e.rus(this.lime.direct([r]))})}}class ut extends P{constructor(t,e){super(t,{name:"random",mode:e}),this.operations.r=["er(arg{})","er(arg{int[1]})","er(arg{int[2]})"],this.algorithms.set("r(arg{})",t=>{t.rus(this.lime.direct([Math.floor(1e15*Math.random()),"/",1e15]))}),this.algorithms.set("r(arg{int[1]})",t=>{t.rus(this.lime.direct(["rand","(",0,",",t.right.places[0],")"]))}),this.algorithms.set("r(arg{int[2]})",t=>{var[e,r]=t.right.places;if(this.lime.direct([e.value,">",r.value]).value)throw new Error("error:invalidArgumentLogic");t.rus(this.lime.direct([Math.floor(Math.random()*(r.value-e.value+1)+e.value)]))})}}class gt extends P{constructor(t,e){super(t,{name:"range",mode:e}),this.operations.r=["er(arg{expr[@]})"],this.algorithms.set("r(arg{expr[@]})",t=>{if(0===t.right.length)throw new Error("error:invalidArgumentLength");t.rus(this.lime.direct(["max",t.right,"-","min",t.right]))})}}class dt extends P{constructor(t,e){super(t,{name:"sum",mode:e}),this.operations.r=["er(arg{expr[@]})"],this.algorithms.set("r(arg{expr[@]})",e=>{if(0===e.right.length)throw new Error("error:invalidArgumentLength");let r=e.right.places[0];for(let t=1;t<e.right.length;t++)r=this.lime.direct([r,"+",e.right.places[t]]);e.rus(this.lime.direct([r]))})}}class bt extends P{constructor(t,e){super(t,{name:"assign",mode:e}),this.operations.b=["tf(==)","tr(_+)","tr(_-)","cr(var->expr)","cr(arg{expr[1]}->expr)","eb(var,expr)"],this.algorithms.set("b(var,expr)",t=>{this.lime.variables.set(t.left.key,t.right),t.bs(t.left)})}}class ft extends P{constructor(t,e){super(t,{name:"columnSplit",mode:e})}}class vt extends P{constructor(t,e){super(t,{name:"commonBracket",mode:e}),this.operations.n=["en()"],this.algorithms.set("n()",t=>{var e=t["data"];const r=[[]],i=[this];let s=t.pos,a=0;for(;s+1<e.length&&0<i.length;){if(this.lime.identify("commonBracket","matrixBracket")(e[s+1]))if("n"===e[s+1].mode)i.push(e[s+1]);else{if(e[s+1].name!==i[i.length-1].name)throw new Error("error:unmatchedBrackets");if(i.pop(),0===i.length)break}else if(this.lime.identify("columnSplit")(e[s+1]))r.push([]),a++,s++;else if(this.lime.identify("rowSplit")(e[s+1])&&1===i.length)throw new Error("error:functionAgreement");r[a].push(e[++s])}if(0<i.length)throw new Error("error:unmatchedBrackets");const l=[];let n=2+a;for(let t=0;t<=a;t++)n+=r[t].length,l.push(0<r[t].length?this.lime.direct(r[t]):null);t.ns(n,this.lime.build("argument")(...l))})}}class xt extends P{constructor(t,e){super(t,{name:"matrixBracket",mode:e}),this.operations.n=["en()"],this.algorithms.set("n()",t=>{var e=t["data"];const r=[[[]]],i=[this];let s=t.pos,a=0,l=0;for(;s+1<e.length&&0<i.length;){if(this.lime.identify("commonBracket","matrixBracket")(e[s+1]))if("n"===e[s+1].mode)i.push(e[s+1]);else{if(e[s+1].name!==i[i.length-1].name)throw new Error("error:unmatchedBrackets");if(i.pop(),0===i.length)break}else if(this.lime.identify("columnSplit")(e[s+1]))r[a].push([]),l++,s++;else if(this.lime.identify("rowSplit")(e[s+1])){if(0<a&&r[a].length!==r[0].length)throw new Error;r.push([[]]),a++,l=0,s++}r[a][l].push(e[++s])}if(0<i.length)throw new Error("error:unmatchedBrackets");const n=[];let o=++a*++l+2;for(let e=0;e<a;e++){n.push([]);for(let t=0;t<l;t++)o+=r[e][t].length,n[e].push(0<r[e][t].length?this.lime.direct(r[e][t]):null)}t.ns(o,this.lime.build("matrix")(n))})}}class wt extends P{constructor(t,e){super(t,{name:"omitted",mode:e}),this.operations.b=["eb(expr,expr)"],this.algorithms.set("b(expr,expr)",t=>{t.fs(t.lime.refer("*"))})}}class yt extends P{constructor(t,e){super(t,{name:"rowSplit",mode:e})}}var Pt=l,_t=n,Et=o,kt=c,It=m,St=u,Mt=g,$t=d,At=b,Bt=f,jt=v,zt=x,Ot=_,Ct=E,Lt=k,Nt=I,qt=S,Dt=M,Ft=$,Rt=A,Tt=B,Vt=j,Zt=z,Ut=O,Gt=C,Ht=L,Jt=N,Kt=q,Qt=D,Wt=F,Xt=R,Yt=T,te=V,ee=Z,re=U,ie=G,se=H,ae=J,le=K,ne=Q,oe=W,ce=X,he=Y,me=tt,pe=et,ue=rt,ge=it,de=st,be=at,fe=lt,ve=nt,xe=ot,we=ct,ye=ht,Pe=mt,_e=pt,Ee=ut,ke=gt,Ie=dt,Se=bt,Me=ft,$e=vt,Ae=xt,Be=wt,je=yt,ze=class{constructor(t,e){this.lime=t,this.input=e,this.solution=[]}get steps(){return this.solution.length}get runtime(){return this.solution[this.steps-1].timestamp-this.solution[0].timestamp}get result(){return this.solution[this.steps-1].data}record(t){this.lime.config.promptShowSteps&&console.log(t.data),this.solution.push(t)}},Oe=class{constructor(t,e,r){this.lime=t,this.data=h.isArray(e)?e:[],this.pos=h.isNumber(r)&&0<=r&&r<this.data.length?r:-1,this.timestamp=Date.now()}get left(){return this.data[this.pos-1]}get func(){return this.data[this.pos]}get right(){return this.data[this.pos+1]}ci(...e){return(...t)=>this.lime.identify(...e)(...t)}lpi(...t){return this.lime.identify(...t)(this.left)}fi(...t){return this.lime.identify(...t)(this.func)}rpi(...t){return this.lime.identify(...t)(this.right)}bpi(...t){return this.lime.identify(...t)(this.left,this.right)}lps(...t){this.data.splice(this.pos-1,1,...t)}fs(...t){this.data.splice(this.pos,1,...t)}rps(...t){this.data.splice(this.pos+1,1,...t)}lus(...t){this.data.splice(this.pos-1,2,...t)}rus(...t){this.data.splice(this.pos,2,...t)}bs(...t){this.data.splice(this.pos-1,3,...t)}ns(t,...e){this.data.splice(this.pos,t,...e)}},Ce=class{constructor(t,e,r){this.lime=t,this.type=["integer","whitespace","symbol","variable"].includes(e)?e:"symbol",this.value=h.isString(r)?r:""}};const Le=new Map;Le.set("about",Pt),Le.set("clear",_t),Le.set("config",Et),Le.set("help",kt),Le.set("list",It),Le.set("argument",St),Le.set("boolean",Mt),Le.set("complex",$t),Le.set("integer",At),Le.set("matrix",Bt),Le.set("rational",jt),Le.set("variable",zt),Le.set("add",Ot),Le.set("decimal",Ct),Le.set("divide",Lt),Le.set("exponent",Nt),Le.set("modulo",qt),Le.set("multiply",Dt),Le.set("negative",Ft),Le.set("positive",Rt),Le.set("subtract",Tt),Le.set("bitwiseAnd",Vt),Le.set("bitwiseNot",Zt),Le.set("bitwiseOr",Ut),Le.set("shiftLeft",Gt),Le.set("shiftRight",Ht),Le.set("equal",Jt),Le.set("greater",Kt),Le.set("greaterEqual",Qt),Le.set("notEqual",Wt),Le.set("smaller",Xt),Le.set("smallerEqual",Yt),Le.set("conjugate",te),Le.set("imaginary",ee),Le.set("real",re),Le.set("combination",ie),Le.set("factorial",se),Le.set("permutation",ae),Le.set("logicalAnd",le),Le.set("logicalNot",ne),Le.set("logicalOr",oe),Le.set("absolute",ce),Le.set("ceiling",he),Le.set("fibonacci",me),Le.set("floor",pe),Le.set("greatestCommonDivisor",ue),Le.set("leastCommonMultiple",ge),Le.set("prime",de),Le.set("reciprocal",be),Le.set("round",fe),Le.set("sign",ve),Le.set("truncation",xe),Le.set("maximum",we),Le.set("mean",ye),Le.set("minimum",Pe),Le.set("product",_e),Le.set("random",Ee),Le.set("range",ke),Le.set("sum",Ie),Le.set("assign",Se),Le.set("columnSplit",Me),Le.set("commonBracket",$e),Le.set("matrixBracket",Ae),Le.set("omitted",Be),Le.set("rowSplit",je),Le.set("command",a),Le.set("equation",ze),Le.set("expression",p),Le.set("function",P),Le.set("step",Oe),Le.set("token",Ce);var Ne=Le;class qe{constructor(t){this.config={...e,...t},this.module=Ne,this.variables=new Map,this.memory=[],this.store={}}get answer(){return this.variables.get("ans").print()}prompt(t){try{return this.run(t)}catch(t){return this.message(t)}}evaluate(t){try{return this.run(t)}catch(t){return console.log(this.message(t)),""}}run(t){if(!h.isString(t))throw new Error("error:inputNotStringInPrompt");if(0===t.length)throw new Error("error:inputEmptyInPrompt");this.variables.has("ans")||this.variables.set("ans",this.direct([0]));const e=this.build("equation")(t);return this.lex(e),this.identify("command")(e.result[0])?e.result[0].execute(t):(this.memory.push(e),this.config.promptShowRuntime&&console.log(`Equation runtime: ${e.runtime/1e3}s`),this.variables.set("ans",e.result[0]),this.answer)}direct(t){try{if(!h.isArray(t))throw new Error("error:inputNotArrayInDirect");if(0===t.length)throw new Error("error:inputEmptyInDirect");const e=this.build("equation")(t);return e.record(this.build("step")(e.input.map(t=>!h.isString(t)&&!h.isNumber(t)||h.isUndefined(this.refer(t))?t:this.refer(t)))),this.process(e),e.result[0]}catch(t){return this.config.testMode?this.message(t):void console.log(this.message(t))}}message(t){var e=new Error("issue:invalidMessage");if(!s.hasOwnProperty(t.message)||!t.message.includes(":"))return console.log(t),this.message(e);var r=t.message.split(":");let i;switch(r[0]){case"error":i="!";break;case"warn":i="?";break;case"issue":i="i";break;default:return this.message(e)}return this.config.developmentMode&&"i"===i&&console.log(t),`[${i}] ${r[1]}\n${s[t.message]} ${"i"===i?`\n${s.github}`:""}`}lex(t){const r=t.input,i=[];for(let e=0;e<r.length;e++){const s=r[e];let t=s;if(s.match(/\s/))i.push(this.build("token")("whitespace"));else if(s.match(/\d/)){for(;e+1<r.length&&r[e+1].match(/\d/);)t+=r[++e];i.push(this.build("token")("integer",t))}else if(s.match(/\w/)){for(;e+1<r.length&&r[e+1].match(/\w/);)t+=r[++e];i.push(this.build("token")("variable",t))}else i.push(this.build("token")("symbol",t))}t.record(i),this.parse(t)}parse(t){var e=t.solution.shift();const r=[];for(let t=0;t<e.length;t++)switch(e[t].type){case"whitespace":break;case"integer":r.push(this.build("integer")(e[t].value));break;case"symbol":case"variable":if(i.hasOwnProperty(e[t].value))r.push(this.refer(e[t].value));else{if("variable"!==e[t].type)throw new Error("error:invalidSymbol");r.push(this.build("variable")(e[t].value))}break;default:throw new Error("issue:invalidTokenInParse")}t.record(this.build("step")(r)),this.identify("command")(t.result[0])||this.process(t)}process(r){for(;;){for(let t=0;t<r.result.length;t++)0<t&&this.identify("expression")(r.result[t-1],r.result[t])&&r.result.splice(t,0,this.build("omitted")("b"));let e=-1;for(let t=0;t<r.result.length;t++)this.identify("function")(r.result[t])&&(e=e<0||r.result[t].order>r.result[e].order?t:e);if(e<0)break;var t=this.build("step")(r.result,e);r.record(r.result[e].evaluate(t))}if(1!==r.result.length||this.identify("argument")(r.result[0])&&1!==r.result[0].length)throw new Error("issue:invalidResultLengthInProcess");r.record(this.build("step")([r.result[0].finalize()]))}identify(...r){if(r.every(t=>this.module.has(t)))return(...t)=>t.every(e=>r.some(t=>h.isClass(this.module.get(t),e)));throw new Error("issue:invalidModuleInIdentify")}build(e){if(this.module.has(e))return(...t)=>new(this.module.get(e))(this,...t);throw new Error("issue:invalidModuleInBuild")}refer(t){return h.isNumber(t)?this.build("integer")(t):i.hasOwnProperty(t)?this.build(i[t][0])(...i[t].slice(1).map(t=>h.isArray(t)?this.build(t[0])(...t.slice(1)):t)):void 0}}return t=>new qe(t)});
