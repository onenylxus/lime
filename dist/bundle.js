/*
Lime version 0.1.0
Mathematics computation engine
2021 Lime Project Team, MIT license
https://github.com/onenylxus/lime
*/

!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).Lime=e()}(this,function(){"use strict";var s={github:"Please create a GitHub issue about how you received this message, thank you. ","error:functionAgreement":"Function does not agree with parameter types.","error:inputEmptyInDirect":"Direct input is empty.","error:inputEmptyInPrompt":"Prompt input is empty.","error:inputNotArrayInDirect":"Direct input is not an array.","error:inputNotStringInPrompt":"Prompt input is not a string.","error:invalidSymbol":"Invalid symbol in prompt input.","error:unmatchedBrackets":"Some brackets are unmatched.","issue:invalidExpressionInConstruct":"Invalid expression in constructor.","issue:invalidFunctionOrder":"Invalid function order.","issue:invalidMessage":"Invalid message detected.","issue:invalidModuleInBuild":"Invalid module in build process.","issue:invalidTokenInParse":"Invalid token in parse process."},r={"+":["add","b"],"(":["commonBracket","n"],")":["commonBracket","x"],"/":["divide","b"],"*":["multiply","b"],"-":["subtract","b"]};var e={developmentMode:!1,testMode:!1},n=class{static isUndefined(...t){return t.every(t=>void 0===t)}static isNull(...t){return t.every(t=>null===t)}static isTrue(...t){return t.every(t=>!0===t)}static isFalse(...t){return t.every(t=>!1===t)}static isBoolean(...t){return t.every(t=>"boolean"==typeof t)}static isNumber(...t){return t.every(t=>"number"==typeof t)}static isString(...t){return t.every(t=>"string"==typeof t)}static isFunction(...t){return t.every(t=>"function"==typeof t)}static isArray(...t){return t.every(t=>t instanceof Array)}static isObject(...t){return t.every(t=>t instanceof Object)}static isClass(e,...t){return t.every(t=>t instanceof e)}};var t=class{constructor(t,{...e}){this.lime=t,this.isSimple=!e.hasOwnProperty("isSimple")||!n.isBoolean(e.isSimple)||e.isSimple}};class i extends t{constructor(t,e){if(super(t,{isSimple:!0}),!n.isNumber(+e))throw new Error("issue:invalidExpressionInConstruct");this.value=Math.trunc(+e)}toRational(){return this.lime.build("rational")(this,this.lime.build("integer")(1))}print(){return`${this.value}`}}class a extends t{constructor(t,e,i){if(super(t,{isSimple:!0}),!this.lime.identify("integer")(e,i))throw new Error("issue:invalidExpressionInConstruct");this.nPlace=e,this.dPlace=i,this.value.d<0&&(this.value.n*=-1,this.value.d*=-1)}get value(){return{n:this.nPlace.value,d:this.dPlace.value}}print(){return`${this.value.n}/${this.value.d}`}}var l=[["add","subtract"],["divide","multiply"],["commonBracket"]],o={cond:{"b(int,int)":t=>t.bpi("integer"),"b(int,rat)":t=>t.lpi("integer")&&t.rpi("rational"),"b(rat,int)":t=>t.lpi("rational")&&t.rpi("integer"),"b(rat,rat)":t=>t.bpi("rational"),"n()":()=>!0},act:{"l(int>rat)":t=>{t.lps(t.left.toRational())},"r(int>rat)":t=>{t.rps(t.right.toRational())}},pair:{"cb(int>rat,rat)":["b(int,rat)","l(int>rat)"],"cb(rat,int>rat)":["b(rat,int)","r(int>rat)"]}};var u=class{constructor(t,{...e}){this.lime=t,this.mode=e.hasOwnProperty("mode")&&["l","r","b","n"].includes(e.mode)?e.mode:"x",this.name=e.hasOwnProperty("name")?e.name:this.constructor.name.slice(4),this.operations={l:[],r:[],b:[],n:[]},this.algorithms=new Map}get order(){for(let t=0;t<l.length;t++)if(l[t].includes(this.name))return t;throw new Error("issue:invalidFunctionOrder")}evaluate(r){if("x"===this.mode)throw new Error("error:unmatchedBrackets");const s=this.operations[this.mode];for(let i=0;i<s.length;i++){let t,e;if(n.isString(s[i])&&(t="e"===s[i][0]?o.cond[s[i].substring(1)]:o.cond[o.pair[s[i]][0]],e="e"===s[i][0]?this.algorithms.get(s[i].substring(1)):o.act[o.pair[s[i]][1]]),t(r))return e(r),r}throw new Error("error:functionAgreement")}};class h extends u{constructor(t,e){super(t,{name:"add",mode:e}),this.operations.b=["cb(int>rat,rat)","cb(rat,int>rat)","eb(int,int)","eb(rat,rat)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("integer")(t.left.value+t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.build("rational")(this.lime.build("integer")(t.left.value.n*t.right.value.d+t.right.value.n*t.left.value.d),this.lime.build("integer")(t.left.value.d*t.right.value.d)))})}}class c extends u{constructor(t,e){super(t,{name:"divide",mode:e}),this.operations.b=["cb(int>rat,rat)","cb(rat,int>rat)","eb(int,int)","eb(rat,rat)"],this.algorithms.set("b(int,int)",t=>{t.left.value%t.right.value==0?t.bs(this.lime.build("integer")(t.left.value/t.right.value)):t.bs(this.lime.build("rational")(t.left,t.right))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.build("rational")(this.lime.build("integer")(t.left.value.n*t.right.value.d),this.lime.build("integer")(t.left.value.d*t.right.value.n)))})}}class d extends u{constructor(t,e){super(t,{name:"multiply",mode:e}),this.operations.b=["cb(int>rat,rat)","cb(rat,int>rat)","eb(int,int)","eb(rat,rat)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("integer")(t.left.value*t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.build("rational")(this.lime.build("integer")(t.left.value.n*t.right.value.n),this.lime.build("integer")(t.left.value.d*t.right.value.d)))})}}class m extends u{constructor(t,e){super(t,{name:"subtract",mode:e}),this.operations.b=["cb(int>rat,rat)","cb(rat,int>rat)","eb(int,int)","eb(rat,rat)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("integer")(t.left.value-t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.build("rational")(this.lime.build("integer")(t.left.value.n*t.right.value.d-t.right.value.n*t.left.value.d),this.lime.build("integer")(t.left.value.d*t.right.value.d)))})}}class p extends u{constructor(t,e){super(t,{name:"commonBracket",mode:e}),this.operations.n=["en()"],this.algorithms.set("n()",t=>{const e=t["data"],i=[];let r=t.pos,s=0;for(;r+1<e.length&&!(this.lime.identify("commonBracket")(e[r+1])&&(s+="n"===e[r+1].mode?1:-1,s<0));)i.push(e[++r]);if(0<=s)throw new Error("error:unmatchedBrackets");t.ns(i.length+2,this.lime.direct([...i]))})}}var b=i,g=a,v=h,f=c,y=d,w=m,k=p,E=class{constructor(t,e){this.lime=t,this.input=e,this.solution=[]}get steps(){return this.solution.length}get result(){return this.solution[this.steps-1].data}record(t){this.solution.push(t)}},I=class{constructor(t,e,i){this.lime=t,this.data=n.isArray(e)?e:[],this.pos=n.isNumber(i)&&0<=i&&i<this.data.length?i:-1,this.timestamp=Date.now()}get left(){return this.data[this.pos-1]}get func(){return this.data[this.pos]}get right(){return this.data[this.pos+1]}lpi(...t){return this.lime.identify(...t)(this.left)}fi(...t){return this.lime.identify(...t)(this.func)}rpi(...t){return this.lime.identify(...t)(this.right)}bpi(...t){return this.lime.identify(...t)(this.left,this.right)}lps(t){this.data.splice(this.pos-1,1,t)}fs(t){this.data.splice(this.pos,1,t)}rps(t){this.data.splice(this.pos+1,1,t)}lus(t){this.data.splice(this.pos-1,2,t)}rus(t){this.data.splice(this.pos,2,t)}bs(t){this.data.splice(this.pos-1,3,t)}ns(t,e){this.data.splice(this.pos,t,e)}},x=class{constructor(t,e,i){this.lime=t,this.type=["integer","whitespace","symbol","variable"].includes(e)?e:"symbol",this.value=n.isString(i)?i:""}};const P=new Map;P.set("integer",b),P.set("rational",g),P.set("add",v),P.set("divide",f),P.set("multiply",y),P.set("subtract",w),P.set("commonBracket",k),P.set("equation",E),P.set("expression",t),P.set("function",u),P.set("step",I),P.set("token",x);var S=P;class B{constructor(t){this.config={...e,...t},this.module=S,this.flags={},this.constants={},this.variables={ans:void 0},this.memory=[]}get answer(){return this.variables.ans.print()}prompt(t){try{if(!n.isString(t))throw new Error("error:inputNotStringInPrompt");if(0===t.length)throw new Error("error:inputEmptyInPrompt");var e=this.build("equation")(t);return this.lex(e),this.memory.push(e),[this.variables.ans]=e.result,this.answer}catch(t){return this.message(t)}}direct(t){try{if(!n.isArray(t))throw new Error("error:inputNotArrayInDirect");if(0===t.length)throw new Error("error:inputEmptyInDirect");const e=this.build("equation")(t);return e.record(this.build("step")(e.input.map(t=>!n.isString(t)&&!n.isNumber(t)||n.isUndefined(this.refer(t))?t:this.refer(t)))),this.process(e),e.result[0]}catch(t){return this.message(t)}}message(t){var e=new Error("issue:invalidMessage");if(!s.hasOwnProperty(t.message)||!t.message.includes(":"))return console.log(t),this.message(e);var i=t.message.split(":");let r;switch(i[0]){case"error":r="!";break;case"warn":r="?";break;case"issue":r="i";break;default:return this.message(e)}return this.config.developmentMode&&"i"===r&&console.log(t),`[${r}] ${i[1]}\n${s[t.message]} ${"i"===r?`\n${s.github}`:""}`}lex(t){const i=t.input,r=[];for(let e=0;e<i.length;e++){const s=i[e];let t=s;if(s.match(/\s/))r.push(this.build("token")("whitespace"));else if(s.match(/\d/)){for(;e+1<i.length&&i[e+1].match(/\d/);)t+=i[++e];r.push(this.build("token")("integer",t))}else if(s.match(/\w/)){for(;e+1<i.length&&i[e+1].match(/\w/);)t+=i[++e];r.push(this.build("token")("variable",t))}else r.push(this.build("token")("symbol",t))}t.record(r),this.parse(t)}parse(t){const e=t.solution.shift(),i=[];for(let t=0;t<e.length;t++)switch(e[t].type){case"whitespace":break;case"integer":i.push(this.build("integer")(e[t].value));break;case"symbol":case"variable":if(r.hasOwnProperty(e[t].value))i.push(this.refer(e[t].value));else{if("variable"!==e[t].type)throw new Error("error:invalidSymbol");i.push(this.build("variable")(e[t].value))}break;default:throw new Error("issue:invalidTokenInParse")}t.record(this.build("step")(i)),this.process(t)}process(i){for(;;){let e=-1;for(let t=0;t<i.result.length;t++)this.identify("function")(i.result[t])&&(e=e<0||i.result[t].order>i.result[e].order?t:e);if(e<0)break;var t=this.build("step")(i.result,e);i.record(i.result[e].evaluate(t))}}identify(...i){return(...t)=>t.every(e=>i.some(t=>n.isClass(this.module.get(t),e)))}build(e){if(this.module.has(e))return(...t)=>new(this.module.get(e))(this,...t);throw new Error("issue:invalidModuleInBuild")}refer(t){return n.isNumber(t)?this.build("integer")(t):r.hasOwnProperty(t)?this.build(r[t][0])(...r[t].slice(1).map(t=>n.isArray(t)?this.build(t[0])(...t.slice(1)):t)):void 0}}return t=>new B(t)});
