/*
Lime version 0.2.2
Mathematics computation engine
2021 Lime Project Team, MIT license
https://github.com/onenylxus/lime
*/

!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(t="undefined"!=typeof globalThis?globalThis:t||self).Lime=r()}(this,function(){"use strict";var t={github:"Please create a GitHub issue about how you received this message, thank you. ","error:emptyArgumentInFinalize":"Empty argument in finalize function.","error:functionAgreement":"Function does not agree with parameter types.","error:invalidArgumentLength":"Invalid argument length.","error:invalidArgumentLogic":"Invalid argument logic.","error:invalidMatrixDimensions":"Invalid matrix dimensions.","error:invalidParametersInCommand":"Invalid parameters in command.","error:inputEmptyInDirect":"Direct input is empty.","error:inputEmptyInPrompt":"Prompt input is empty.","error:inputNotArrayInDirect":"Direct input is not an array.","error:inputNotStringInPrompt":"Prompt input is not a string.","error:invalidConfigProperty":"Invalid configuration property in config command","error:invalidListProperty":"Invalid list property in list command","error:invalidSymbol":"Invalid symbol in prompt input.","error:undefinedVariable":"Variable is undefined but used.","error:unmatchedBrackets":"Some brackets are unmatched.","issue:invalidExpressionInConstruct":"Invalid expression in constructor.","issue:invalidFunctionOrder":"Invalid function order.","issue:invalidMessage":"Invalid message detected.","issue:invalidModuleInBuild":"Invalid module in build function.","issue:invalidModuleInIdentify":"Invalid module in identify function.","issue:invalidResultLengthInProcess":"Invalid result length in process function.","issue:invalidTokenInParse":"Invalid token in parse function.","warn:negativeFactorial":"Factorial function has negative integer input. Currenly gamma function has not been implemented.","warn:strictBoolean":"Strict boolean configuration is set to true. Boolean to expression conversion is not allowed.","warn:zeroExponentOfZero":"Zero raised to exponent of zero is undefined."},r={about:["about"],clear:["clear"],config:["config"],help:["help"],list:["list"],false:["boolean",!1],i:["complex",["integer",0],["integer",1]],true:["boolean",!0],"()":["argument",null],abs:["absolute","r"],ceil:["ceiling","r"],conj:["conjugate","r"],fibonacci:["fibonacci","r"],floor:["floor","r"],gcd:["greatestCommonDivisor","r"],idmat:["identityMatrix","r"],im:["imaginary","r"],lcm:["leastCommonMultiple","r"],max:["maximum","r"],mean:["mean","r"],min:["minimum","r"],ncr:["combination","r"],npr:["permutation","r"],onemat:["oneMatrix","r"],prime:["prime","r"],prod:["product","r"],rand:["random","r"],range:["range","r"],re:["real","r"],reciprocal:["reciprocal","r"],round:["round","r"],sgn:["sign","r"],sum:["sum","r"],trunc:["truncation","r"],zeromat:["zeroMatrix","r"],"+":["add","b"],"=":["assign","b"],"&":["bitwiseAnd","b"],"~":["bitwiseNot","r"],"|":["bitwiseOr","b"],",":["columnSplit","x"],"(":["commonBracket","n"],")":["commonBracket","x"],".":["decimal","b"],"/":["divide","b"],"==":["equal","b"],"^":["exponent","b"],"!":["factorial","l"],">":["greater","b"],">=":["greaterEqual","b"],"&&":["logicalAnd","b"],"_!":["logicalNot","r"],"||":["logicalOr","b"],"[":["matrixBracket","n"],"]":["matrixBracket","x"],"%":["modulo","b"],"*":["multiply","b"],"_-":["negative","r"],"!=":["notEqual","b"],"_+":["positive","r"],";":["rowSplit","x"],"<<":["shiftLeft","b"],">>":["shiftRight","b"],"<":["smaller","b"],"<=":["smallerEqual","b"],"-":["subtract","b"]};var e=class{static isUndefined(...t){return t.every(t=>void 0===t)}static isNull(...t){return t.every(t=>null===t)}static isTrue(...t){return t.every(t=>!0===t)}static isFalse(...t){return t.every(t=>!1===t)}static isBoolean(...t){return t.every(t=>"boolean"==typeof t)}static isNumber(...t){return t.every(t=>"number"==typeof t)}static isString(...t){return t.every(t=>"string"==typeof t)}static isFunction(...t){return t.every(t=>"function"==typeof t)}static isArray(...t){return t.every(t=>t instanceof Array)}static isObject(...t){return t.every(t=>t instanceof Object)}static isClass(r,...t){return t.every(t=>t instanceof r)}},i={developmentMode:!1,promptShowRuntime:!1,promptShowSteps:!1,strictBoolean:!0,tabSize:2,testMode:!1};const s={name:"@onenylxus/lime",version:"0.2.2",description:"Mathematics computation engine",author:"Lime Project Team",license:"MIT",keywords:["javascript","mathematics"],main:"dist/bundle.js",module:"dist/bundle-cjs.js",browser:"dist/bundle-esm.js",sideEffects:!1,dependencies:{},devDependencies:{"@rollup/plugin-commonjs":"^20.0.0","@rollup/plugin-json":"^4.1.0","@rollup/plugin-node-resolve":"^13.0.0",codecov:"^3.8.2",eslint:"^7.25.0","eslint-config-airbnb-base":"^14.2.1","eslint-plugin-import":"^2.24.2",husky:"^7.0.2",jest:"^27.1.0","lint-staged":"^11.1.2","prettier-eslint":"^13.0.0","prettier-eslint-cli":"^5.0.1",rimraf:"^3.0.2",rollup:"^2.56.3","rollup-plugin-node-polyfills":"^0.2.1","rollup-plugin-uglify":"^6.0.4"},scripts:{lint:"prettier-eslint '**/*.js'",clean:"rimraf dist/*.js",debug:"node examples/prompt.js -q",prebuild:"yarn lint && yarn clean",build:"rollup -c",watch:"jest --config jest.config.json --watch",pretest:"yarn build",test:"jest --config jest.config.json --verbose"},husky:{hooks:{"pre-commit":"yarn test"}},repository:{type:"git",url:"git+https://github.com/onenylxus/lime.git"},bugs:{url:"https://github.com/onenylxus/lime/issues"},homepage:"https://github.com/onenylxus/lime#readme"};var a=class{constructor(t,{...r}){this.lime=t,this.name=r.hasOwnProperty("name")?r.name:this.constructor.name.slice(11),this.description=r.hasOwnProperty("description")?r.description:"",this.operations=new Map}execute(t){var r=t.split(/\s/).slice(1),t=r.length;if(!this.operations.has(t))throw new Error("error:invalidParametersInCommand");return this.operations.get(t)(...r)}};const l=function(){return`Lime version ${s.version}\n${s.description}\n2021 ${s.author}, ${s.license} license\n${s.homepage.slice(0,-7)}`};class n extends a{constructor(t){super(t,{name:"about",description:"show information about the engine"}),this.operations.set(0,()=>l())}}var o=n;class c extends a{constructor(t){super(t,{name:"clear",description:"clear variables and memory"}),this.operations.set(0,()=>(this.lime.variables=new Map,this.lime.memory=[],this.lime.store={},"Cleared"))}}var h=c;class m extends a{constructor(t){super(t,{name:"config",description:"view and modify engine configurations"}),this.operations.set(1,t=>{if(!this.lime.config.hasOwnProperty(t))throw new Error("error:invalidConfigProperty");return`${t}: ${this.lime.config[t]}`}),this.operations.set(2,(t,r)=>{if(!this.lime.config.hasOwnProperty(t))throw new Error("error:invalidConfigProperty");var e=this.lime.config[t];return this.lime.config[t]=this.lime.direct([r]).value,`${t}: ${e} > ${this.lime.config[t]}`})}}var p=m;const u=a;class g extends u{constructor(t){super(t,{name:"help",description:"list all available commands"}),this.operations.set(0,()=>{const e=["Below is a list of available commands:"];return this.lime.module.forEach(t=>{try{var r=new t(this.lime);r instanceof u&&e.push(`${r.name}: ${r.description}`)}catch(t){}}),e.join("\n")})}}var d=g;const b=e;class f extends a{constructor(t){super(t,{name:"list",description:"list specified engine property"}),this.operations.set(1,t=>{if(!this.lime.hasOwnProperty(t)||b.isFunction(this.lime[t]))throw new Error("error:invalidListProperty");return b.isClass(Map,this.lime[t])?Object.fromEntries(this.lime[t]):this.lime[t]})}}var v=f;const x=e;var w=class{constructor(t,{...r}){this.lime=t,this.name=r.hasOwnProperty("name")?r.name:this.constructor.name.slice(12),this.isSimple=!r.hasOwnProperty("isSimple")||!x.isBoolean(r.isSimple)||r.isSimple}};const y=e;class P extends w{constructor(t,...r){if(super(t,{name:"argument",isSimple:!1}),!this.lime.identify("expression")(...r)&&!y.isNull(r[0]))throw new Error("issue:invalidExpressionInConstruct");this.places=r}get value(){return this.places.map(t=>t.value)}get length(){return this.isEmpty?0:this.places.length}get isEmpty(){return y.isNull(this.places[0])}simplify(){return this.places.map(t=>t.simplify())}finalize(){if(this.isEmpty)throw new Error("error:emptyArgumentInFinalize");return 1===this.length?this.places[0].finalize():this.places.map(t=>t.finalize())}}var _=P;class E extends w{constructor(t,r){super(t,{name:"boolean",isSimple:!0}),this.raw=r}get value(){return!!this.raw}toInteger(){if(this.lime.config.strictBoolean)throw new Error("warn:strictBoolean");return this.lime.direct([+this.value])}simplify(){return this.lime.build("boolean")(this.value)}finalize(){return this.simplify()}print(){return this.value?"true":"false"}}var M=E;class k extends w{constructor(t,r,e){if(super(t,{name:"complex",isSimple:!0}),!this.lime.identify("integer","rational")(r,e))throw new Error("issue:invalidExpressionInConstruct");this.rPlace=r,this.iPlace=e}get value(){return{r:this.rPlace.value,i:this.iPlace.value}}toBoolean(){return this.lime.build("boolean")(this.value.r||this.value.i)}simplify(){return this.lime.direct([this.iPlace,"==",0]).value?this.rPlace.simplify():this.lime.build("complex")(this.rPlace.simplify(),this.iPlace.simplify())}finalize(){return this.simplify()}print(){var t=this.lime.direct(["sgn","(",this.iPlace,")"]).value;return`${0===this.value.r?"":`${this.rPlace.print()}${0<t?"+":""}`}${1===this.value.i?"":-1===this.value.i?"-":this.iPlace.print()}i`}}var I=k;const S=e;class $ extends w{constructor(t,r){if(super(t,{name:"integer",isSimple:!0}),!S.isNumber(+r))throw new Error("issue:invalidExpressionInConstruct");this.string=`${r}`}get value(){return Math.trunc(+this.string)}toBoolean(){return this.lime.build("boolean")(this.value)}toComplex(){return this.lime.build("complex")(this,this.lime.build("integer")(0))}toRational(){return this.lime.build("rational")(this,this.lime.build("integer")(1))}simplify(){return this.lime.build("integer")(this.value)}finalize(){return this.simplify()}print(){return`${this.value}`}}var z=$;const A=e;class B extends w{constructor(t,r){if(super(t,{name:"matrix",isSimple:!1}),!this.lime.identify("expression")(...r.flat())&&!A.isNull(r[0][0]))throw new Error("issue:invalidExpressionInConstruct");const e=r[0].length;if(r.some(t=>t.length!==e))throw new Error("error:invalidMatrixDimensions");this.places=r}get value(){return this.places.map(t=>t.map(t=>t.value))}get row(){return this.isEmpty?0:this.places.length}get column(){return this.isEmpty?0:this.places[0].length}get isEmpty(){return A.isNull(this.places[0][0])}simplify(){return this.places=this.places.map(t=>t.map(t=>t.simplify())),this}finalize(){return this.places=this.places.map(t=>t.map(t=>t.finalize())),this}print(){let e="";if(this.lime.config.testMode){e+="[";for(let r=0;r<this.row;r++){e+=0===r?"":";";for(let t=0;t<this.column;t++)e+=(0===t?"":",")+this.places[r][t].print()}e+="]"}else{var i=this.places.map(t=>t.map(t=>t.print().length));const s=[];for(let e=0;e<this.column;e++){let r=0;for(let t=0;t<this.row;t++)r=Math.max(i[t][e],r);s.push(r)}for(let r=0;r<this.row;r++){for(let t=0;t<this.column;t++)e+=new Array(s[t]-i[r][t]+this.lime.config.tabSize+1).join(" ")+this.places[r][t].print();e+=r<this.row-1?"\n":""}}return e}}var j=B;class O extends w{constructor(t,r,e){if(super(t,{name:"rational",isSimple:!0}),!this.lime.identify("integer")(r,e))throw new Error("issue:invalidExpressionInConstruct");this.nPlace=r,this.dPlace=e}get value(){return{n:this.nPlace.value,d:this.dPlace.value}}toBoolean(){return this.lime.build("boolean")(this.value.n/this.value.d)}toComplex(){return this.lime.build("complex")(this,this.lime.build("integer")(0))}simplify(){var t=this.lime.direct(["gcd","(",this.nPlace,",",this.dPlace,")"]);return this.nPlace=this.lime.direct([this.nPlace,"/",t]),this.dPlace=this.lime.direct([this.dPlace,"/",t]),this.value.d<0&&(this.nPlace=this.lime.direct(["-",this.nPlace]),this.dPlace=this.lime.direct(["-",this.dPlace])),1===this.value.d?this.nPlace.simplify():this.lime.build("rational")(this.nPlace.simplify(),this.dPlace.simplify())}finalize(){return this.simplify()}print(){return`${this.nPlace.print()}/${this.dPlace.print()}`}}var C=O;class L extends w{constructor(t,r){super(t,{name:"variable",isSimple:!0}),this.key=r}get value(){if(!this.lime.variables.has(this.key))throw new Error("error:undefinedVariable");return this.lime.variables.get(this.key)}simplify(){return this.value.simplify()}finalize(){return this.simplify()}}var N=L;const q={cond:{"b(bool,bool)":t=>t.bpi("boolean"),"b(comp,comp)":t=>t.bpi("complex"),"b(comp,{int|rat})":t=>t.lpi("complex")&&t.rpi("integer","rational"),"b(expr,expr)":t=>t.bpi("expression"),"b(int,int)":t=>t.bpi("integer"),"b(int,rat)":t=>t.lpi("integer")&&t.rpi("rational"),"b(rat,int)":t=>t.lpi("rational")&&t.rpi("integer"),"b(rat,rat)":t=>t.bpi("rational"),"b(mat,mat)":t=>t.bpi("matrix"),"b(var,expr)":t=>t.lpi("variable")&&t.rpi("expression"),"b({int|rat},comp)":t=>t.lpi("integer","rational")&&t.rpi("complex"),"l(arg{expr[1]})":t=>t.lpi("argument")&&1===t.left.length&&t.ci("expression")(t.left.places[0]),"l(bool)":t=>t.lpi("boolean"),"l(int)":t=>t.lpi("integer"),"l(var)":t=>t.lpi("variable"),"l({comp|int|rat})":t=>t.lpi("complex","integer","rational"),"n()":()=>!0,"r(arg{})":t=>t.rpi("argument")&&t.right.isEmpty,"r(arg{comp[1]})":t=>t.rpi("argument")&&1===t.right.length&&t.ci("complex")(...t.right.places),"r(arg{expr[1]})":t=>t.rpi("argument")&&1===t.right.length&&t.ci("expression")(...t.right.places),"r(arg{expr[@]})":t=>t.rpi("argument")&&t.ci("expression")(...t.right.places),"r(arg{int[1]})":t=>t.rpi("argument")&&1===t.right.length&&t.ci("integer")(...t.right.places),"r(arg{int[2]})":t=>t.rpi("argument")&&2===t.right.length&&t.ci("integer")(...t.right.places),"r(arg{rat[1]})":t=>t.rpi("argument")&&1===t.right.length&&t.ci("rational")(...t.right.places),"r(arg{{int|rat}[$]})":r=>r.rpi("argument")&&r.right.places.some(t=>r.ci("integer","rational")(t)),"r(bool)":t=>t.rpi("boolean"),"r(int)":t=>t.rpi("integer"),"r(rat)":t=>t.rpi("rational"),"r(var)":t=>t.rpi("variable"),"r({comp|int|rat})":t=>t.rpi("complex","integer","rational"),"r(+)":t=>t.rpi("add"),"r(=)":t=>t.rpi("assign"),"r(&)":t=>t.rpi("bitwiseAnd"),"r(|)":t=>t.rpi("bitwiseOr"),"r(!)":t=>t.rpi("factorial"),"r(>)":t=>t.rpi("greater"),"r(_-)":t=>t.rpi("negative"),"r(_+)":t=>t.rpi("positive"),"r(<)":t=>t.rpi("smaller"),"r(-)":t=>t.rpi("subtract"),"z()":t=>0===t.pos},act:{"f(==)":t=>{t.rus(t.lime.refer("=="))},"f(!==)":t=>{t.rus(t.lime.refer("!"),t.lime.refer("=="))},"f(>=)":t=>{t.rus(t.lime.refer(">="))},"f(&&)":t=>{t.rus(t.lime.refer("&&"))},"f(_!)":t=>{t.fs(t.lime.refer("_!"))},"f(||)":t=>{t.rus(t.lime.refer("||"))},"f(_-)":t=>{t.fs(t.lime.refer("_-"))},"f(!=)":t=>{t.rus(t.lime.refer("!="))},"f(_+)":t=>{t.fs(t.lime.refer("_+"))},"f(<<)":t=>{t.rus(t.lime.refer("<<"))},"f(>>)":t=>{t.rus(t.lime.refer(">>"))},"f(<=)":t=>{t.rus(t.lime.refer("<="))},"l(arg{expr[1]}->expr)":t=>{t.lps(t.left.finalize())},"l(expr->int)":t=>{t.lps(t.left.toInteger())},"l(expr->rat)":t=>{t.lps(t.left.toRational())},"l(var->expr)":t=>{t.lps(t.left.value)},"l({comp|int|rat}->bool)":t=>{t.lps(t.left.toBoolean())},"l({int|rat}->comp)":t=>{t.lps(t.left.toComplex())},"r(arg{expr[1]}->expr)":t=>{t.rps(t.right.finalize())},"r(arg{{int|rat}[$]}->arg{comp[$]})":r=>{const t=r.right;t.places=t.places.map(t=>r.ci("integer","rational")(t)?t.toComplex():t),r.rps(t)},"r(expr->int)":t=>{t.rps(t.right.toInteger())},"r(expr->rat)":t=>{t.rps(t.right.toRational())},"r(var->expr)":t=>{t.rps(t.right.value)},"r({comp|int|rat}->bool)":t=>{t.rps(t.right.toBoolean())},"r({int|rat}->comp)":t=>{t.rps(t.right.toComplex())},"r(_!)":t=>{t.rps(t.lime.refer("_!"))},"r(_-)":t=>{t.rps(t.lime.refer("_-"))},"r(_+)":t=>{t.rps(t.lime.refer("_+"))}},pair:{"cb(comp,{int|rat}->comp)":["b(comp,{int|rat})","r({int|rat}->comp)"],"cb(int->rat,rat)":["b(int,rat)","l(expr->rat)"],"cb(rat,int->rat)":["b(rat,int)","r(expr->rat)"],"cb({int|rat}->comp,comp)":["b({int|rat},comp)","l({int|rat}->comp)"],"cl(arg{expr[1]}->expr)":["l(arg{expr[1]})","l(arg{expr[1]}->expr)"],"cl(bool->int)":["l(bool)","l(expr->int)"],"cl(var->expr)":["l(var)","l(var->expr)"],"cl({comp|int|rat}->bool)":["l({comp|int|rat})","l({comp|int|rat}->bool)"],"cr(arg{expr[1]}->expr)":["r(arg{expr[1]})","r(arg{expr[1]}->expr)"],"cr(arg{{int|rat}[$]}->arg{comp[$]})":["r(arg{{int|rat}[$]})","r(arg{{int|rat}[$]}->arg{comp[$]})"],"cr(bool->int)":["r(bool)","r(expr->int)"],"cr(var->expr)":["r(var)","r(var->expr)"],"cr({comp|int|rat}->bool)":["r({comp|int|rat})","r({comp|int|rat}->bool)"],"tf(==)":["r(=)","f(==)"],"tf(!==)":["r(=)","f(!==)"],"tf(>=)":["r(=)","f(>=)"],"tf(&&)":["r(&)","f(&&)"],"tf(||)":["r(|)","f(||)"],"tf(!=)":["r(=)","f(!=)"],"tf(<<)":["r(<)","f(<<)"],"tf(>>)":["r(>)","f(>>)"],"tf(<=)":["r(=)","f(<=)"],"tr(_!)":["r(!)","r(_!)"],"tr(_+)":["r(+)","r(_+)"],"tr(_-)":["r(-)","r(_-)"],"tz(_!)":["z()","f(_!)"],"tz(_+)":["z()","f(_+)"],"tz(_-)":["z()","f(_-)"]}},D=[["columnSplit","rowSplit"],["assign","equal","greater","greaterEqual","notEqual","smaller","smallerEqual"],["add","bitwiseAnd","bitwiseNot","bitwiseOr","logicalAnd","logicalNot","logicalOr","modulo","shiftLeft","shiftRight","subtract"],["divide","multiply"],["exponent"],["decimal","negative","positive"],["absolute","ceiling","combination","conjugate","factorial","fibonacci","floor","greatestCommonDivisor","identityMatrix","imaginary","leastCommonMultiple","maximum","mean","minimum","oneMatrix","permutation","prime","product","random","range","real","reciprocal","round","sign","sum","truncation","zeroMatrix"],["commonBracket","matrixBracket","omitted"]],F=e;var R=class{constructor(t,{...r}){this.lime=t,this.mode=r.hasOwnProperty("mode")&&["l","r","b","n"].includes(r.mode)?r.mode:"x",this.name=r.hasOwnProperty("name")?r.name:this.constructor.name.slice(12),this.operations={},this.algorithms=new Map}get order(){for(let t=0;t<D.length;t++)if(D[t].includes(this.name))return t;throw new Error("issue:invalidFunctionOrder")}evaluate(i){if("x"===this.mode)throw new Error("error:unmatchedBrackets");const s=this.operations[this.mode];for(let e=0;e<s.length;e++){let t,r;if(F.isString(s[e])&&(t="e"===s[e][0]?q.cond[s[e].substring(1)]:q.cond[q.pair[s[e]][0]],r="e"===s[e][0]?this.algorithms.get(s[e].substring(1)):q.act[q.pair[s[e]][1]]),t(i))return r(i),i}throw new Error("error:functionAgreement")}};class T extends R{constructor(t,r){super(t,{name:"add",mode:r}),this.operations.b=["tz(_+)","tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","cb({int|rat}->comp,comp)","cb(comp,{int|rat}->comp)","eb(int,int)","eb(rat,rat)","eb(comp,comp)","eb(mat,mat)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("integer")(t.left.value+t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.build("rational")(this.lime.direct([t.left.nPlace,"*",t.right.dPlace,"+",t.right.nPlace,"*",t.left.dPlace]),this.lime.direct([t.left.dPlace,"*",t.right.dPlace])))}),this.algorithms.set("b(comp,comp)",t=>{t.bs(this.lime.build("complex")(this.lime.direct([t.left.rPlace,"+",t.right.rPlace]),this.lime.direct([t.left.iPlace,"+",t.right.iPlace])))}),this.algorithms.set("b(mat,mat)",e=>{if(e.left.row!==e.right.row||e.left.column!==e.right.column)throw new Error("error:invalidMatrixDimensions");const i=[];for(let r=0;r<e.left.row;r++){i.push([]);for(let t=0;t<e.left.column;t++)i[r].push(this.lime.direct([e.left.places[r][t],"+",e.right.places[r][t]]))}e.bs(this.lime.build("matrix")(i))})}}var V=T;class Z extends R{constructor(t,r){super(t,{name:"decimal",mode:r}),this.operations.b=["eb(int,int)"],this.algorithms.set("b(int,int)",t=>{var r;0<t.right.value?(r=this.lime.direct([10,"^",t.right.string.length]),t.bs(this.lime.direct(["(",t.left,"*",r,"+",t.right,")","/",r]))):t.bs(t.left)})}}var U=Z;class G extends R{constructor(t,r){super(t,{name:"divide",mode:r}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","cb({int|rat}->comp,comp)","cb(comp,{int|rat}->comp)","eb(int,int)","eb(rat,rat)","eb(comp,comp)"],this.algorithms.set("b(int,int)",t=>{t.left.value%t.right.value==0?t.bs(this.lime.build("integer")(t.left.value/t.right.value)):t.bs(this.lime.build("rational")(t.left,t.right))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.build("rational")(this.lime.direct([t.left.nPlace,"*",t.right.dPlace]),this.lime.direct([t.left.dPlace,"*",t.right.nPlace])))}),this.algorithms.set("b(comp,comp)",t=>{t.bs(this.lime.build("complex")(this.lime.direct(["re","(",t.left,"*","conj","(",t.right,")",")","/","(",t.right,"*","conj","(",t.right,")",")"]),this.lime.direct(["im","(",t.left,"*","conj","(",t.right,")",")","/","(",t.right,"*","conj","(",t.right,")",")"])))})}}var H=G;class J extends R{constructor(t,r){super(t,{name:"exponent",mode:r}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","eb(int,int)","eb(rat,int)"],this.algorithms.set("b(int,int)",t=>{if(0<=t.right.value){if(0===t.left.value&&0===t.right.value)throw new Error("warn:zeroExponentOfZero");t.bs(this.lime.build("integer")(t.left.value**t.right.value))}else t.bs(this.lime.build("rational")(this.lime.direct([1]),this.lime.direct([t.left,"^","-",t.right])))}),this.algorithms.set("b(rat,int)",t=>{0<=t.right.value?t.bs(this.lime.build("rational")(this.lime.direct([t.left.nPlace,"^",t.right]),this.lime.direct([t.left.dPlace,"^",t.right]))):t.bs(this.lime.build("rational")(this.lime.direct([t.left.dPlace,"^","-",t.right]),this.lime.direct([t.left.nPlace,"^","-",t.right])))})}}var K=J;class Q extends R{constructor(t,r){super(t,{name:"modulo",mode:r}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","eb(int,int)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("integer")(t.left.value%t.right.value))})}}var W=Q;class X extends R{constructor(t,r){super(t,{name:"multiply",mode:r}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","cb({int|rat}->comp,comp)","cb(comp,{int|rat}->comp)","eb(int,int)","eb(rat,rat)","eb(comp,comp)","eb(mat,mat)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("integer")(t.left.value*t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.build("rational")(this.lime.direct([t.left.nPlace,"*",t.right.nPlace]),this.lime.direct([t.left.dPlace,"*",t.right.dPlace])))}),this.algorithms.set("b(comp,comp)",t=>{t.bs(this.lime.build("complex")(this.lime.direct([t.left.rPlace,"*",t.right.rPlace,"-",t.left.iPlace,"*",t.right.iPlace]),this.lime.direct([t.left.rPlace,"*",t.right.iPlace,"+",t.left.iPlace,"*",t.right.rPlace])))}),this.algorithms.set("b(mat,mat)",s=>{if(s.left.column!==s.right.row)throw new Error("error:invalidMatrixDimensions");const t=[];for(let i=0;i<s.left.row;i++){t.push([]);for(let e=0;e<s.right.column;e++){let r=this.lime.direct([0]);for(let t=0;t<s.right.row;t++)r=this.lime.direct([r,"+",s.left.places[i][t],"*",s.right.places[t][e]]);t[i].push(r)}}s.bs(this.lime.build("matrix")(t))})}}var Y=X;class tt extends R{constructor(t,r){super(t,{name:"negative",mode:r}),this.operations.r=["tr(_!)","tr(_+)","tr(_-)","cr(var->expr)","cr(arg{expr[1]}->expr)","cr(bool->int)","er(int)","er(rat)","er(_+)","er(_-)"],this.algorithms.set("r(int)",t=>{t.rus(this.lime.direct([-1,"*",t.right]))}),this.algorithms.set("r(rat)",t=>{t.rus(this.lime.build("rational")(this.lime.direct(["-",t.right.nPlace]),t.right.dPlace))}),this.algorithms.set("r(_+)",t=>{t.rus(this.lime.refer("_-"))}),this.algorithms.set("r(_-)",t=>{t.rus(this.lime.refer("_+"))})}}var rt=tt;class et extends R{constructor(t,r){super(t,{name:"positive",mode:r}),this.operations.r=["tr(_!)","tr(_+)","tr(_-)","cr(var->expr)","cr(arg{expr[1]}->expr)","cr(bool->int)","er(int)","er(rat)","er(_+)","er(_-)"],this.algorithms.set("r(int)",t=>{t.rus(this.lime.direct([1,"*",t.right]))}),this.algorithms.set("r(rat)",t=>{t.rus(this.lime.build("rational")(this.lime.direct([t.right.nPlace]),t.right.dPlace))}),this.algorithms.set("r(_+)",t=>{t.rus(this.lime.refer("_+"))}),this.algorithms.set("r(_-)",t=>{t.rus(this.lime.refer("_-"))})}}var it=et;class st extends R{constructor(t,r){super(t,{name:"subtract",mode:r}),this.operations.b=["tz(_-)","tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","cb({int|rat}->comp,comp)","cb(comp,{int|rat}->comp)","eb(int,int)","eb(rat,rat)","eb(comp,comp)","eb(mat,mat)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("integer")(t.left.value-t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.build("rational")(this.lime.direct([t.left.nPlace,"*",t.right.dPlace,"-",t.right.nPlace,"*",t.left.dPlace]),this.lime.direct([t.left.dPlace,"*",t.right.dPlace])))}),this.algorithms.set("b(comp,comp)",t=>{t.bs(this.lime.build("complex")(this.lime.direct([t.left.rPlace,"-",t.right.rPlace]),this.lime.direct([t.left.iPlace,"-",t.right.iPlace])))}),this.algorithms.set("b(mat,mat)",e=>{if(e.left.row!==e.right.row||e.left.column!==e.right.column)throw new Error("error:invalidMatrixDimensions");const i=[];for(let r=0;r<e.left.row;r++){i.push([]);for(let t=0;t<e.left.column;t++)i[r].push(this.lime.direct([e.left.places[r][t],"-",e.right.places[r][t]]))}e.bs(this.lime.build("matrix")(i))})}}var at=st;class lt extends R{constructor(t,r){super(t,{name:"bitwiseAnd",mode:r}),this.operations.b=["tf(&&)","tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","eb(int,int)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.direct([t.left.value&t.right.value]))})}}var nt=lt;class ot extends R{constructor(t,r){super(t,{name:"bitwiseNot",mode:r}),this.operations.r=["tr(_!)","tr(_+)","tr(_-)","cr(var->expr)","cr(arg{expr[1]}->expr)","cr(bool->int)","er(int)"],this.algorithms.set("r(int)",t=>{t.rus(this.lime.direct([~t.right.value]))})}}var ct=ot;class ht extends R{constructor(t,r){super(t,{name:"bitwiseOr",mode:r}),this.operations.b=["tf(||)","tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","eb(int,int)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.direct([t.left.value|t.right.value]))})}}var mt=ht;class pt extends R{constructor(t,r){super(t,{name:"shiftLeft",mode:r}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","eb(int,int)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.direct([t.left.value<<t.right.value]))})}}var ut=pt;class gt extends R{constructor(t,r){super(t,{name:"shiftRight",mode:r}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","eb(int,int)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.direct([t.left.value>>t.right.value]))})}}var dt=gt;class bt extends R{constructor(t,r){super(t,{name:"equal",mode:r}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","eb(int,int)","eb(rat,rat)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("boolean")(t.left.value===t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.direct([t.left.nPlace,"*",t.right.dPlace,"==",t.right.nPlace,"*",t.left.dPlace]))})}}var ft=bt;class vt extends R{constructor(t,r){super(t,{name:"greater",mode:r}),this.operations.b=["tf(>=)","tf(>>)","tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","eb(int,int)","eb(rat,rat)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("boolean")(t.left.value>t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.direct([t.left.nPlace,"*",t.right.dPlace,">",t.right.nPlace,"*",t.left.dPlace]))})}}var xt=vt;class wt extends R{constructor(t,r){super(t,{name:"greaterEqual",mode:r}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","eb(int,int)","eb(rat,rat)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("boolean")(t.left.value>=t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.direct([t.left.nPlace,"*",t.right.dPlace,">=",t.right.nPlace,"*",t.left.dPlace]))})}}var yt=wt;class Pt extends R{constructor(t,r){super(t,{name:"notEqual",mode:r}),this.operations.b=["tf(!==)","tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","eb(int,int)","eb(rat,rat)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("boolean")(t.left.value!==t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.direct([t.left.nPlace,"*",t.right.dPlace,"!=",t.right.nPlace,"*",t.left.dPlace]))})}}var _t=Pt;class Et extends R{constructor(t,r){super(t,{name:"smaller",mode:r}),this.operations.b=["tf(<=)","tf(<<)","tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","eb(int,int)","eb(rat,rat)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("boolean")(t.left.value<t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.direct([t.left.nPlace,"*",t.right.dPlace,"<",t.right.nPlace,"*",t.left.dPlace]))})}}var Mt=Et;class kt extends R{constructor(t,r){super(t,{name:"smallerEqual",mode:r}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl(bool->int)","cr(bool->int)","cb(int->rat,rat)","cb(rat,int->rat)","eb(int,int)","eb(rat,rat)"],this.algorithms.set("b(int,int)",t=>{t.bs(this.lime.build("boolean")(t.left.value<=t.right.value))}),this.algorithms.set("b(rat,rat)",t=>{t.bs(this.lime.direct([t.left.nPlace,"*",t.right.dPlace,"<=",t.right.nPlace,"*",t.left.dPlace]))})}}var It=kt;class St extends R{constructor(t,r){super(t,{name:"conjugate",mode:r}),this.operations.r=["cr(arg{{int|rat}[$]}->arg{comp[$]})","er(arg{comp[1]})"],this.algorithms.set("r(arg{comp[1]})",t=>{t.rus(this.lime.build("complex")(t.right.places[0].rPlace,this.lime.direct(["-",t.right.places[0].iPlace])))})}}var $t=St;class zt extends R{constructor(t,r){super(t,{name:"imaginary",mode:r}),this.operations.r=["cr(arg{{int|rat}[$]}->arg{comp[$]})","er(arg{comp[1]})"],this.algorithms.set("r(arg{comp[1]})",t=>{t.rus(this.lime.direct([t.right.places[0].iPlace]))})}}var At=zt;class Bt extends R{constructor(t,r){super(t,{name:"real",mode:r}),this.operations.r=["cr(arg{{int|rat}[$]}->arg{comp[$]})","er(arg{comp[1]})"],this.algorithms.set("r(arg{comp[1]})",t=>{t.rus(this.lime.direct([t.right.places[0].rPlace]))})}}var jt=Bt;class Ot extends R{constructor(t,r){super(t,{name:"combination",mode:r}),this.operations.r=["er(arg{int[2]})"],this.algorithms.set("r(arg{int[2]})",t=>{var[r,e]=t.right.places;if(r.value<e.value)throw new Error("error:invalidArgumentLogic");t.rus(this.lime.direct(["npr","(",r,",",e,")","/",e,"!"]))})}}var Ct=Ot;class Lt extends R{constructor(t,r){super(t,{name:"factorial",mode:r}),this.operations.l=["tz(_!)","tf(!=)","cl(var->expr)","cl(arg{expr[1]}->expr)","cl(bool->int)","el(int)"],this.algorithms.set("l(int)",t=>{if(t.left.value<0)throw new Error("warn:negativeFactorial");0<t.left.value?t.lus(this.lime.direct([t.left,"*","(",t.left,"-",1,")","!"])):t.lus(this.lime.direct([1]))})}}var Nt=Lt;class qt extends R{constructor(t,r){super(t,{name:"permutation",mode:r}),this.operations.r=["er(arg{int[2]})"],this.algorithms.set("r(arg{int[2]})",t=>{var[r,e]=t.right.places;if(r.value<e.value)throw new Error("error:invalidArgumentLogic");t.rus(this.lime.direct([r,"!","/","(",r,"-",e,")","!"]))})}}var Dt=qt;class Ft extends R{constructor(t,r){super(t,{name:"logicalAnd",mode:r}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl({comp|int|rat}->bool)","cr({comp|int|rat}->bool)","eb(bool,bool)"],this.algorithms.set("b(bool,bool)",t=>{t.bs(this.lime.build("boolean")(t.left.value&&t.right.value))})}}var Rt=Ft;class Tt extends R{constructor(t,r){super(t,{name:"logicalNot",mode:r}),this.operations.r=["tr(_!)","tr(_+)","tr(_-)","cr(var->expr)","cr(arg{expr[1]}->expr)","cr({comp|int|rat}->bool)","er(bool)"],this.algorithms.set("r(bool)",t=>{t.rus(this.lime.build("boolean")(!t.right.value))})}}var Vt=Tt;class Zt extends R{constructor(t,r){super(t,{name:"logicalOr",mode:r}),this.operations.b=["tr(_!)","tr(_+)","tr(_-)","cl(var->expr)","cr(var->expr)","cl(arg{expr[1]}->expr)","cr(arg{expr[1]}->expr)","cl({comp|int|rat}->bool)","cr({comp|int|rat}->bool)","eb(bool,bool)"],this.algorithms.set("b(bool,bool)",t=>{t.bs(this.lime.build("boolean")(t.left.value||t.right.value))})}}var Ut=Zt;class Gt extends R{constructor(t,r){super(t,{name:"identityMatrix",mode:r}),this.operations.r=["er(arg{int[1]})"],this.algorithms.set("r(arg{int[1]})",e=>{const i=[];for(let r=0;r<e.right.value[0];r++){i.push([]);for(let t=0;t<e.right.value[0];t++)i[r].push(this.lime.direct([t===r?1:0]))}e.rus(this.lime.build("matrix")(i))})}}var Ht=Gt;class Jt extends R{constructor(t,r){super(t,{name:"oneMatrix",mode:r}),this.operations.r=["er(arg{int[1]})","er(arg{int[2]})"],this.algorithms.set("r(arg{int[1]})",e=>{const i=[];for(let r=0;r<e.right.value[0];r++){i.push([]);for(let t=0;t<e.right.value[0];t++)i[r].push(this.lime.direct([1]))}e.rus(this.lime.build("matrix")(i))}),this.algorithms.set("r(arg{int[2]})",e=>{const i=[];for(let r=0;r<e.right.value[0];r++){i.push([]);for(let t=0;t<e.right.value[1];t++)i[r].push(this.lime.direct([1]))}e.rus(this.lime.build("matrix")(i))})}}var Kt=Jt;class Qt extends R{constructor(t,r){super(t,{name:"zeroMatrix",mode:r}),this.operations.r=["er(arg{int[1]})","er(arg{int[2]})"],this.algorithms.set("r(arg{int[1]})",e=>{const i=[];for(let r=0;r<e.right.value[0];r++){i.push([]);for(let t=0;t<e.right.value[0];t++)i[r].push(this.lime.direct([0]))}e.rus(this.lime.build("matrix")(i))}),this.algorithms.set("r(arg{int[2]})",e=>{const i=[];for(let r=0;r<e.right.value[0];r++){i.push([]);for(let t=0;t<e.right.value[1];t++)i[r].push(this.lime.direct([0]))}e.rus(this.lime.build("matrix")(i))})}}var Wt=Qt;class Xt extends R{constructor(t,r){super(t,{name:"absolute",mode:r}),this.operations.r=["er(arg{int[1]})","er(arg{rat[1]})"],this.algorithms.set("r(arg{int[1]})",t=>{t.rus(this.lime.direct([Math.abs(t.right.value[0])]))}),this.algorithms.set("r(arg{rat[1]})",t=>{t.rus(this.lime.direct([Math.abs(t.right.value[0].n),"/",Math.abs(t.right.value[0].d)]))})}}var Yt=Xt;class tr extends R{constructor(t,r){super(t,{name:"ceiling",mode:r}),this.operations.r=["er(arg{int[1]})","er(arg{rat[1]})"],this.algorithms.set("r(arg{int[1]})",t=>{t.rus(this.lime.direct([t.right.value[0]]))}),this.algorithms.set("r(arg{rat[1]})",t=>{t.rus(this.lime.direct([Math.ceil(t.right.value[0].n/t.right.value[0].d)]))})}}var rr=tr;class er extends R{constructor(t,r){super(t,{name:"fibonacci",mode:r}),this.operations.r=["er(arg{int[1]})"],this.algorithms.set("r(arg{int[1]})",t=>{var r=t.right.value[0];if(r<1)throw new Error("error:invalidArgumentLogic");this.lime.store.hasOwnProperty("fibonacci")||(this.lime.store.fibonacci=[1,1]);const e=[...this.lime.store.fibonacci];for(;e.length<r;)e.push(e[e.length-2]+e[e.length-1]);this.lime.store.fibonacci=[...e],t.rus(this.lime.direct([e[r-1]]))})}}var ir=er;class sr extends R{constructor(t,r){super(t,{name:"floor",mode:r}),this.operations.r=["er(arg{int[1]})","er(arg{rat[1]})"],this.algorithms.set("r(arg{int[1]})",t=>{t.rus(this.lime.direct([t.right.value[0]]))}),this.algorithms.set("r(arg{rat[1]})",t=>{t.rus(this.lime.direct([Math.floor(t.right.value[0].n/t.right.value[0].d)]))})}}var ar=sr;class lr extends R{constructor(t,r){super(t,{name:"greatestCommonDivisor",mode:r}),this.operations.r=["er(arg{int[2]})"],this.algorithms.set("r(arg{int[2]})",t=>{let r=t.right.value[0],e=t.right.value[1];for(;0!==e;){var i=e;e=r%e,r=i}t.rus(this.lime.direct([r]))})}}var nr=lr;class or extends R{constructor(t,r){super(t,{name:"leastCommonMultiple",mode:r}),this.operations.r=["er(arg{int[2]})"],this.algorithms.set("r(arg{int[2]})",t=>{var r=t.right.value[0],e=t.right.value[1];t.rus(this.lime.direct([r,"*",e,"/","gcd","(",r,",",e,")"]))})}}var cr=or;class hr extends R{constructor(t,r){super(t,{name:"prime",mode:r}),this.operations.r=["er(arg{int[1]})"],this.algorithms.set("r(arg{int[1]})",t=>{var r=t.right.value[0];if(r<1)throw new Error("error:invalidArgumentLogic");this.lime.store.hasOwnProperty("prime")||(this.lime.store.prime=[2]);const e=[...this.lime.store.prime];let i=e[e.length-1]+1;for(;e.length<r;)e.every(t=>i%t!=0)&&e.push(i),i++;this.lime.store.prime=[...e],t.rus(this.lime.direct([e[r-1]]))})}}var mr=hr;class pr extends R{constructor(t,r){super(t,{name:"reciprocal",mode:r}),this.operations.r=["er(arg{expr[1]})"],this.algorithms.set("r(arg{expr[1]})",t=>{t.rus(this.lime.direct([1,"/",t.right.places[0]]))})}}var ur=pr;class gr extends R{constructor(t,r){super(t,{name:"round",mode:r}),this.operations.r=["er(arg{int[1]})","er(arg{rat[1]})"],this.algorithms.set("r(arg{int[1]})",t=>{t.rus(this.lime.direct([t.right.value[0]]))}),this.algorithms.set("r(arg{rat[1]})",t=>{t.rus(this.lime.direct([Math.round(t.right.value[0].n/t.right.value[0].d)]))})}}var dr=gr;class br extends R{constructor(t,r){super(t,{name:"sign",mode:r}),this.operations.r=["er(arg{int[1]})","er(arg{rat[1]})"],this.algorithms.set("r(arg{int[1]})",t=>{t.rus(this.lime.direct([Math.sign(t.right.value[0])]))}),this.algorithms.set("r(arg{rat[1]})",t=>{t.rus(this.lime.direct([Math.sign(t.right.value[0].n/t.right.value[0].d)]))})}}var fr=br;class vr extends R{constructor(t,r){super(t,{name:"truncation",mode:r}),this.operations.r=["er(arg{int[1]})","er(arg{rat[1]})"],this.algorithms.set("r(arg{int[1]})",t=>{t.rus(this.lime.direct([t.right.value[0]]))}),this.algorithms.set("r(arg{rat[1]})",t=>{t.rus(this.lime.direct([Math.trunc(t.right.value[0].n/t.right.value[0].d)]))})}}var xr=vr;class wr extends R{constructor(t,r){super(t,{name:"maximum",mode:r}),this.operations.r=["er(arg{expr[@]})"],this.algorithms.set("r(arg{expr[@]})",r=>{if(0===r.right.length)throw new Error("error:invalidArgumentLength");let e=0;for(let t=1;t<r.right.length;t++)e=this.lime.direct([r.right.places[t],">",r.right.places[e]]).value?t:e;r.rus(this.lime.direct([r.right.places[e]]))})}}var yr=wr;class Pr extends R{constructor(t,r){super(t,{name:"mean",mode:r}),this.operations.r=["er(arg{expr[@]})"],this.algorithms.set("r(arg{expr[@]})",t=>{if(0===t.right.length)throw new Error("error:invalidArgumentLength");t.rus(this.lime.direct(["sum",t.right,"/",t.right.length]))})}}var _r=Pr;class Er extends R{constructor(t,r){super(t,{name:"minimum",mode:r}),this.operations.r=["er(arg{expr[@]})"],this.algorithms.set("r(arg{expr[@]})",r=>{if(0===r.right.length)throw new Error("error:invalidArgumentLength");let e=0;for(let t=1;t<r.right.length;t++)e=this.lime.direct([r.right.places[t],"<",r.right.places[e]]).value?t:e;r.rus(this.lime.direct([r.right.places[e]]))})}}var Mr=Er;class kr extends R{constructor(t,r){super(t,{name:"product",mode:r}),this.operations.r=["er(arg{expr[@]})"],this.algorithms.set("r(arg{expr[@]})",r=>{if(0===r.right.length)throw new Error("error:invalidArgumentLength");let e=r.right.places[0];for(let t=1;t<r.right.length;t++)e=this.lime.direct([e,"*",r.right.places[t]]);r.rus(this.lime.direct([e]))})}}var Ir=kr;class Sr extends R{constructor(t,r){super(t,{name:"random",mode:r}),this.operations.r=["er(arg{})","er(arg{int[1]})","er(arg{int[2]})"],this.algorithms.set("r(arg{})",t=>{t.rus(this.lime.direct([Math.floor(1e15*Math.random()),"/",1e15]))}),this.algorithms.set("r(arg{int[1]})",t=>{t.rus(this.lime.direct(["rand","(",0,",",t.right.places[0],")"]))}),this.algorithms.set("r(arg{int[2]})",t=>{var[r,e]=t.right.places;if(this.lime.direct([r.value,">",e.value]).value)throw new Error("error:invalidArgumentLogic");t.rus(this.lime.direct([Math.floor(Math.random()*(e.value-r.value+1)+r.value)]))})}}var $r=Sr;class zr extends R{constructor(t,r){super(t,{name:"range",mode:r}),this.operations.r=["er(arg{expr[@]})"],this.algorithms.set("r(arg{expr[@]})",t=>{if(0===t.right.length)throw new Error("error:invalidArgumentLength");t.rus(this.lime.direct(["max",t.right,"-","min",t.right]))})}}var Ar=zr;class Br extends R{constructor(t,r){super(t,{name:"sum",mode:r}),this.operations.r=["er(arg{expr[@]})"],this.algorithms.set("r(arg{expr[@]})",r=>{if(0===r.right.length)throw new Error("error:invalidArgumentLength");let e=r.right.places[0];for(let t=1;t<r.right.length;t++)e=this.lime.direct([e,"+",r.right.places[t]]);r.rus(this.lime.direct([e]))})}}var jr=Br;class Or extends R{constructor(t,r){super(t,{name:"assign",mode:r}),this.operations.b=["tf(==)","tr(_+)","tr(_-)","cr(var->expr)","cr(arg{expr[1]}->expr)","eb(var,expr)"],this.algorithms.set("b(var,expr)",t=>{this.lime.variables.set(t.left.key,t.right),t.bs(t.left)})}}var Cr=Or;class Lr extends R{constructor(t,r){super(t,{name:"columnSplit",mode:r})}}var Nr=Lr;class qr extends R{constructor(t,r){super(t,{name:"commonBracket",mode:r}),this.operations.n=["en()"],this.algorithms.set("n()",t=>{var r=t["data"];const e=[[]],i=[this];let s=t.pos,a=0;for(;s+1<r.length&&0<i.length;){if(this.lime.identify("commonBracket","matrixBracket")(r[s+1]))if("n"===r[s+1].mode)i.push(r[s+1]);else{if(r[s+1].name!==i[i.length-1].name)throw new Error("error:unmatchedBrackets");if(i.pop(),0===i.length)break}else if(this.lime.identify("columnSplit")(r[s+1]))e.push([]),a++,s++;else if(this.lime.identify("rowSplit")(r[s+1])&&1===i.length)throw new Error("error:functionAgreement");e[a].push(r[++s])}if(0<i.length)throw new Error("error:unmatchedBrackets");const l=[];let n=2+a;for(let t=0;t<=a;t++)n+=e[t].length,l.push(0<e[t].length?this.lime.direct(e[t]):null);t.ns(n,this.lime.build("argument")(...l))})}}var Dr=qr;class Fr extends R{constructor(t,r){super(t,{name:"matrixBracket",mode:r}),this.operations.n=["en()"],this.algorithms.set("n()",t=>{var r=t["data"];const e=[[[]]],i=[this];let s=t.pos,a=0,l=0;for(;s+1<r.length&&0<i.length;){if(this.lime.identify("commonBracket","matrixBracket")(r[s+1]))if("n"===r[s+1].mode)i.push(r[s+1]);else{if(r[s+1].name!==i[i.length-1].name)throw new Error("error:unmatchedBrackets");if(i.pop(),0===i.length)break}else if(this.lime.identify("columnSplit")(r[s+1]))e[a].push([]),l++,s++;else if(this.lime.identify("rowSplit")(r[s+1])){if(0<a&&e[a].length!==e[0].length)throw new Error;e.push([[]]),a++,l=0,s++}e[a][l].push(r[++s])}if(0<i.length)throw new Error("error:unmatchedBrackets");const n=[];let o=++a*++l+1;for(let r=0;r<a;r++){n.push([]);for(let t=0;t<l;t++)o+=e[r][t].length,n[r].push(0<e[r][t].length?this.lime.direct(e[r][t]):null)}t.ns(o,this.lime.build("matrix")(n))})}}var Rr=Fr;class Tr extends R{constructor(t,r){super(t,{name:"omitted",mode:r}),this.operations.b=["eb(expr,expr)"],this.algorithms.set("b(expr,expr)",t=>{t.fs(t.lime.refer("*"))})}}var Vr=Tr;class Zr extends R{constructor(t,r){super(t,{name:"rowSplit",mode:r})}}var Ur=Zr;var Gr=class{constructor(t,r){this.lime=t,this.input=r,this.solution=[]}get steps(){return this.solution.length}get runtime(){return this.solution[this.steps-1].timestamp-this.solution[0].timestamp}get result(){return this.solution[this.steps-1].data}record(t){this.lime.config.promptShowSteps&&console.log(t.data),this.solution.push(t)}};const Hr=e;var Jr=class{constructor(t,r,e){this.lime=t,this.data=Hr.isArray(r)?r:[],this.pos=Hr.isNumber(e)&&0<=e&&e<this.data.length?e:-1,this.timestamp=Date.now()}get left(){return this.data[this.pos-1]}get func(){return this.data[this.pos]}get right(){return this.data[this.pos+1]}ci(...r){return(...t)=>this.lime.identify(...r)(...t)}lpi(...t){return this.lime.identify(...t)(this.left)}fi(...t){return this.lime.identify(...t)(this.func)}rpi(...t){return this.lime.identify(...t)(this.right)}bpi(...t){return this.lime.identify(...t)(this.left,this.right)}lps(...t){this.data.splice(this.pos-1,1,...t)}fs(...t){this.data.splice(this.pos,1,...t)}rps(...t){this.data.splice(this.pos+1,1,...t)}lus(...t){this.data.splice(this.pos-1,2,...t)}rus(...t){this.data.splice(this.pos,2,...t)}bs(...t){this.data.splice(this.pos-1,3,...t)}ns(t,...r){this.data.splice(this.pos,t,...r)}};const Kr=e;var Qr=class{constructor(t,r,e){this.lime=t,this.type=["integer","whitespace","symbol","variable"].includes(r)?r:"symbol",this.value=Kr.isString(e)?e:""}};const Wr=new Map;Wr.set("about",o),Wr.set("clear",h),Wr.set("config",p),Wr.set("help",d),Wr.set("list",v),Wr.set("argument",_),Wr.set("boolean",M),Wr.set("complex",I),Wr.set("integer",z),Wr.set("matrix",j),Wr.set("rational",C),Wr.set("variable",N),Wr.set("add",V),Wr.set("decimal",U),Wr.set("divide",H),Wr.set("exponent",K),Wr.set("modulo",W),Wr.set("multiply",Y),Wr.set("negative",rt),Wr.set("positive",it),Wr.set("subtract",at),Wr.set("bitwiseAnd",nt),Wr.set("bitwiseNot",ct),Wr.set("bitwiseOr",mt),Wr.set("shiftLeft",ut),Wr.set("shiftRight",dt),Wr.set("equal",ft),Wr.set("greater",xt),Wr.set("greaterEqual",yt),Wr.set("notEqual",_t),Wr.set("smaller",Mt),Wr.set("smallerEqual",It),Wr.set("conjugate",$t),Wr.set("imaginary",At),Wr.set("real",jt),Wr.set("combination",Ct),Wr.set("factorial",Nt),Wr.set("permutation",Dt),Wr.set("logicalAnd",Rt),Wr.set("logicalNot",Vt),Wr.set("logicalOr",Ut),Wr.set("identityMatrix",Ht),Wr.set("oneMatrix",Kt),Wr.set("zeroMatrix",Wt),Wr.set("absolute",Yt),Wr.set("ceiling",rr),Wr.set("fibonacci",ir),Wr.set("floor",ar),Wr.set("greatestCommonDivisor",nr),Wr.set("leastCommonMultiple",cr),Wr.set("prime",mr),Wr.set("reciprocal",ur),Wr.set("round",dr),Wr.set("sign",fr),Wr.set("truncation",xr),Wr.set("maximum",yr),Wr.set("mean",_r),Wr.set("minimum",Mr),Wr.set("product",Ir),Wr.set("random",$r),Wr.set("range",Ar),Wr.set("sum",jr),Wr.set("assign",Cr),Wr.set("columnSplit",Nr),Wr.set("commonBracket",Dr),Wr.set("matrixBracket",Rr),Wr.set("omitted",Vr),Wr.set("rowSplit",Ur),Wr.set("command",a),Wr.set("equation",Gr),Wr.set("expression",w),Wr.set("function",R),Wr.set("step",Jr),Wr.set("token",Qr);Qr=Wr;const Xr=t,Yr=r,te=e,re=i,ee=Qr;class ie{constructor(t){this.config={...re,...t},this.module=ee,this.variables=new Map,this.memory=[],this.store={}}get answer(){return this.variables.get("ans").print()}prompt(t){try{return this.run(t)}catch(t){return this.message(t)}}evaluate(t){try{return this.run(t)}catch(t){return console.log(this.message(t)),""}}run(t){if(!te.isString(t))throw new Error("error:inputNotStringInPrompt");if(0===t.length)throw new Error("error:inputEmptyInPrompt");this.variables.has("ans")||this.variables.set("ans",this.direct([0]));const r=this.build("equation")(t);return this.lex(r),this.identify("command")(r.result[0])?r.result[0].execute(t):(this.memory.push(r),this.config.promptShowRuntime&&console.log(`Equation runtime: ${r.runtime/1e3}s`),this.variables.set("ans",r.result[0]),this.answer)}direct(t){try{if(!te.isArray(t))throw new Error("error:inputNotArrayInDirect");if(0===t.length)throw new Error("error:inputEmptyInDirect");const r=this.build("equation")(t);return r.record(this.build("step")(r.input.map(t=>!te.isString(t)&&!te.isNumber(t)||te.isUndefined(this.refer(t))?t:this.refer(t)))),this.process(r),r.result[0]}catch(t){return this.config.testMode?this.message(t):void console.log(this.message(t))}}message(t){var r=new Error("issue:invalidMessage");if(!Xr.hasOwnProperty(t.message)||!t.message.includes(":"))return console.log(t),this.message(r);var e=t.message.split(":");let i;switch(e[0]){case"error":i="!";break;case"warn":i="?";break;case"issue":i="i";break;default:return this.message(r)}return this.config.developmentMode&&"i"===i&&console.log(t),`[${i}] ${e[1]}\n${Xr[t.message]} ${"i"===i?`\n${Xr.github}`:""}`}lex(t){const e=t.input,i=[];for(let r=0;r<e.length;r++){const s=e[r];let t=s;if(s.match(/\s/))i.push(this.build("token")("whitespace"));else if(s.match(/\d/)){for(;r+1<e.length&&e[r+1].match(/\d/);)t+=e[++r];i.push(this.build("token")("integer",t))}else if(s.match(/\w/)){for(;r+1<e.length&&e[r+1].match(/\w/);)t+=e[++r];i.push(this.build("token")("variable",t))}else i.push(this.build("token")("symbol",t))}t.record(i),this.parse(t)}parse(t){var r=t.solution.shift();const e=[];for(let t=0;t<r.length;t++)switch(r[t].type){case"whitespace":break;case"integer":e.push(this.build("integer")(r[t].value));break;case"symbol":case"variable":if(Yr.hasOwnProperty(r[t].value))e.push(this.refer(r[t].value));else{if("variable"!==r[t].type)throw new Error("error:invalidSymbol");e.push(this.build("variable")(r[t].value))}break;default:throw new Error("issue:invalidTokenInParse")}t.record(this.build("step")(e)),this.identify("command")(t.result[0])||this.process(t)}process(e){for(;;){for(let t=0;t<e.result.length;t++)0<t&&this.identify("expression")(e.result[t-1],e.result[t])&&e.result.splice(t,0,this.build("omitted")("b"));let r=-1;for(let t=0;t<e.result.length;t++)this.identify("function")(e.result[t])&&(r=r<0||e.result[t].order>e.result[r].order?t:r);if(r<0)break;var t=this.build("step")(e.result,r);e.record(e.result[r].evaluate(t))}if(1!==e.result.length||this.identify("argument")(e.result[0])&&1!==e.result[0].length)throw new Error("issue:invalidResultLengthInProcess");e.record(this.build("step")([e.result[0].finalize()]))}identify(...e){if(e.every(t=>this.module.has(t)))return(...t)=>t.every(r=>e.some(t=>te.isClass(this.module.get(t),r)));throw new Error("issue:invalidModuleInIdentify")}build(r){if(this.module.has(r))return(...t)=>new(this.module.get(r))(this,...t);throw new Error("issue:invalidModuleInBuild")}refer(t){return te.isNumber(t)?this.build("integer")(t):Yr.hasOwnProperty(t)?this.build(Yr[t][0])(...Yr[t].slice(1).map(t=>te.isArray(t)?this.build(t[0])(...t.slice(1)):t)):void 0}}return t=>new ie(t)});
