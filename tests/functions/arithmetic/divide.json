{
  "name": "Divide function test",
  "version": 2,
  "process": [
    {
      "desc": "boolean with boolean",
      "config": {
        "strictBoolean": false
      },
      "tests": [
        {
          "input": ["false/true"],
          "type": "equals",
          "output": "0"
        },
        {
          "input": ["true/true"],
          "type": "equals",
          "output": "1"
        }
      ]
    },
    {
      "desc": "boolean with complex",
      "config": {
        "strictBoolean": false
      },
      "tests": [
        {
          "input": ["false/(1+2i)"],
          "type": "equals",
          "output": "0"
        },
        {
          "input": ["(3-i)/true"],
          "type": "equals",
          "output": "3-i"
        }
      ]
    },
    {
      "desc": "boolean with integer",
      "config": {
        "strictBoolean": false
      },
      "tests": [
        {
          "input": ["true/3"],
          "type": "equals",
          "output": "1/3"
        },
        {
          "input": ["2/true"],
          "type": "equals",
          "output": "2"
        }
      ]
    },
    {
      "desc": "boolean with rational",
      "config": {
        "strictBoolean": false
      },
      "tests": [
        {
          "input": ["true/(2/3)"],
          "type": "equals",
          "output": "3/2"
        },
        {
          "input": ["(2/5)/true"],
          "type": "equals",
          "output": "2/5"
        }
      ]
    },
    {
      "desc": "complex with complex",
      "config": {},
      "tests": [
        {
          "input": ["(1+2i)/(1-2i)"],
          "type": "equals",
          "output": "-3/5+4/5i"
        }
      ]
    },
    {
      "desc": "complex with integer",
      "config": {},
      "tests": [
        {
          "input": ["(3+9i)/3"],
          "type": "equals",
          "output": "1+3i"
        },
        {
          "input": ["5/(-1+2i)"],
          "type": "equals",
          "output": "-1-2i"
        }
      ]
    },
    {
      "desc": "complex with rational",
      "config": {},
      "tests": [
        {
          "input": ["(1-2i)/(1/2)"],
          "type": "equals",
          "output": "2-4i"
        },
        {
          "input": ["(1/2)/(1+i)"],
          "type": "equals",
          "output": "1/4-1/4i"
        }
      ]
    },
    {
      "desc": "integer with integer",
      "config": {},
      "tests": [
        {
          "input": ["4/2"],
          "type": "equals",
          "output": "2"
        },
        {
          "input": ["1/3"],
          "type": "equals",
          "output": "1/3"
        }
      ]
    },
    {
      "desc": "integer with rational",
      "config": {},
      "tests": [
        {
          "input": ["(1/2)/3"],
          "type": "equals",
          "output": "1/6"
        },
        {
          "input": ["1/(2/3)"],
          "type": "equals",
          "output": "3/2"
        }
      ]
    },
    {
      "desc": "rational with rational",
      "config": {},
      "tests": [
        {
          "input": ["(1/3)/(1/4)"],
          "type": "equals",
          "output": "4/3"
        }
      ]
    },
    {
      "desc": "variable conversion",
      "config": {},
      "tests": [
        {
          "input": ["l=1", "r=2", "l/r"],
          "type": "equals",
          "output": "1/2"
        }
      ]
    }
  ]
}
