{
  "name": "Multiply function test",
  "version": 2,
  "process": [
    {
      "desc": "boolean with boolean",
      "config": {
        "strictBoolean": false
      },
      "tests": [
        {
          "input": ["false*false"],
          "type": "equals",
          "output": "0"
        },
        {
          "input": ["false*true"],
          "type": "equals",
          "output": "0"
        },
        {
          "input": ["true*false"],
          "type": "equals",
          "output": "0"
        },
        {
          "input": ["true*true"],
          "type": "equals",
          "output": "1"
        }
      ]
    },
    {
      "desc": "boolean with integer",
      "config": {
        "strictBoolean": false
      },
      "tests": [
        {
          "input": ["false*4"],
          "type": "equals",
          "output": "0"
        },
        {
          "input": ["2*true"],
          "type": "equals",
          "output": "2"
        }
      ]
    },
    {
      "desc": "boolean with complex",
      "config": {
        "strictBoolean": false
      },
      "tests": [
        {
          "input": ["false*(2+i)"],
          "type": "equals",
          "output": "0"
        },
        {
          "input": ["(3-i)*true"],
          "type": "equals",
          "output": "3-i"
        }
      ]
    },
    {
      "desc": "boolean with rational",
      "config": {
        "strictBoolean": false
      },
      "tests": [
        {
          "input": ["false*(1/3)"],
          "type": "equals",
          "output": "0"
        },
        {
          "input": ["(4/5)*true"],
          "type": "equals",
          "output": "4/5"
        }
      ]
    },
    {
      "desc": "complex with complex",
      "config": {},
      "tests": [
        {
          "input": ["i*i"],
          "type": "equals",
          "output": "-1"
        },
        {
          "input": ["(1+i)*(2-i)"],
          "type": "equals",
          "output": "3+i"
        }
      ]
    },
    {
      "desc": "complex with integer",
      "config": {},
      "tests": [
        {
          "input": ["(1+2i)*3"],
          "type": "equals",
          "output": "3+6i"
        },
        {
          "input": ["5*(-1+2i)"],
          "type": "equals",
          "output": "-5+10i"
        }
      ]
    },
    {
      "desc": "complex with rational",
      "config": {},
      "tests": [
        {
          "input": ["(3+6i)*(2/3)"],
          "type": "equals",
          "output": "2+4i"
        },
        {
          "input": ["(1/3)*(3/2+i)"],
          "type": "equals",
          "output": "1/2+1/3i"
        }
      ]
    },
    {
      "desc": "integer with integer",
      "config": {},
      "tests": [
        {
          "input": ["3*2"],
          "type": "equals",
          "output": "6"
        }
      ]
    },
    {
      "desc": "integer with rational",
      "config": {},
      "tests": [
        {
          "input": ["(1/3)*2"],
          "type": "equals",
          "output": "2/3"
        },
        {
          "input": ["2*(1/5)"],
          "type": "equals",
          "output": "2/5"
        }
      ]
    },
    {
      "desc": "rational with rational",
      "config": {},
      "tests": [
        {
          "input": ["(1/4)*(3/5)"],
          "type": "equals",
          "output": "3/20"
        }
      ]
    },
    {
      "desc": "matrix with matrix",
      "config": {},
      "tests": [
        {
          "input": ["[1,0,1;0,-1,0]*[3;2;4]"],
          "type": "equals",
          "output": "[7;-2]"
        },
        {
          "input": ["[1,2]*[1,3]"],
          "type": "throws",
          "output": "error:invalidMatrixDimensions"
        }
      ]
    },
    {
      "desc": "variable conversion",
      "config": {},
      "tests": [
        {
          "input": ["l=2", "r=3", "l*r"],
          "type": "equals",
          "output": "6"
        }
      ]
    }
  ]
}
